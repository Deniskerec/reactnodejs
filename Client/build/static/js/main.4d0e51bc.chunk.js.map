{"version":3,"sources":["utils/context.js","store/actions/actions.js","store/actions/action_types.js","store/reducers/plain_reducer.js","store/reducers/auth_reducer.js","store/reducers/form_reducer.js","store/reducers/posts_reducer.js","utils/history.js","utils/authcheck.js","hooks/home.js","hooks/header.js","hooks/hook1.js","hooks/callback.js","hooks/hooks_form1.js","hooks/privatecomponent.js","hooks/signup.js","Profile/profile.js","Profile/showuser.js","Profile/sendmessage.js","Profile/showmessages.js","Profile/replytomessage.js","Blog/posts.js","Blog/addpost.js","Blog/showpost.js","Blog/editpost.js","routes.js","context_state_config.js","utils/auth.js","App.js","index.js"],"names":["Context","React","createContext","user_input_change","text","type","payload","user_input_submit","initialState","stateprop1","Reducer1","state","action","Error","is_authenticated","db_profile","profile","AuthReducer","user_textChange","user_textSubmit","FormReducer","posts","PostsReducer","createBrowserHistory","AuthCheck","context","useContext","useEffect","authObj","isAuthenticated","userProfile","handleUserLogin","handleUserAddProfile","axios","post","then","get","params","email","res","handleAddDBProfile","data","history","replace","handleUserLogout","handleUserRemoveProfile","Home","props","Header","to","style","padding","authState","onClick","logout","login","HooksContainer1","useState","value","setValue","useEffectValue","setUseEffectValue","useReducer","dispatch","setTimeout","dispatchContextTrue","dispatchContextFalse","useContextSubmitState","stateProp1","Callback","HooksForm1","valueChange","setValueChange","valueSubmit","setValueSubmit","onSubmit","event","preventDefault","target","id","onChange","ACTIONS","useContextSubmit","useContextChange","prop4","useContextChangeState","PrivateComponent","SignUp","className","color","size","variant","Profile","open","post_id","stateLocal","setState","user_id","dbProfileState","uid","catch","err","console","log","handleClickClose","RenderPosts","width","height","marginBottom","paddingBottom","title","pathname","pid","subheader","date_created","overflow","body","nickname","src","picture","alt","name","email_verified","profileState","map","key","onClose","aria-labelledby","aria-describedby","delete","DeletePost","ShowUser","setProfile","userPosts","setPosts","username","location","author","error","window","scrollTo","top","left","moment","format","SendMessage","message_to_username","message_sender","message_to","response","label","margin","multiline","rows","ShowMessages","messages","setMessages","RenderMessages","message","message_title","message_body","DeleteMessage","mid","goBack","ReplytoMessage","Posts","fetched","first_page_load","pages_slice","max_page","items_per_page","currentPage","num_posts","posts_slice","posts_search","posts_per_page","postsState","handleAddPosts","indexOfLastPost","indexOfFirstPost","last_page","Math","ceil","length","slice","paddingLeft","textDecoration","likes","page_change","page","behavior","next_page","prev_page","opacity","transition","search_query","AddPost","rowsMax","ShowPost","comment","cid","delete_comment_id","edit_comment_id","edit_comment","comments_arr","cur_user_id","like_post","like_user_ids","post_title","post_body","post_author","like_user_id","substring","handleEditFormClose","RenderComments","isEdited","isEditing","handleUpdate","autoFocus","handleEditCommentChange","handleDeleteComment","editted_comment","comment_id","edited_comment","put","commentIndex","findIndex","com","newArr","handleCommentUpdate","filter","handleCommentDelete","cursor","includes","handleLikes","submitted_comment","floor","random","scroll","handleCommentSubmit","EditPost","PrivateRoute","Component","component","auth","render","Routes","exact","path","HooksForm","handleAuth","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","authorize","parseHash","authResult","localStorage","setItem","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","getProfile","getAccessToken","getItem","client","userInfo","removeItem","parse","ContextState","stateReducer1","dispatchReducer1","stateAuthReducer","dispatchAuthReducer","stateFormReducer","dispatchFormReducer","statePostsReducer","dispatchPostsReducer","Provider","handleDBProfile","handleRemoveDBProfile","handleAddProfile","persist","handleFormSubmit","handleFormChange","handleSetPosts","handleRemovePosts","hash","handleAuthentication","App","ReactDOM","document","getElementById"],"mappings":"oOAIeA,EAFCC,IAAMC,gBC+CTC,EAAoB,SAACC,GAChC,MAAO,CACLC,KCtC6B,oBDuC7BC,QAASF,IAIAG,EAAoB,SAACH,GAChC,MAAO,CACLC,KC3C6B,oBD4C7BC,QAASF,I,OEzDAI,EAAe,CAC1BC,YAAY,GAGDC,EAAW,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACtD,OAAOA,EAAOP,MACZ,IDPiB,UCQf,OAAO,eACFM,EADL,CAEEF,YAAY,IAEhB,IDViB,UCWf,OAAO,eACFE,EADL,CAEEF,YAAY,IAEhB,QACE,MAAM,IAAII,QCjBLL,EAAe,CAC1BM,kBAAkB,EAClBC,WAAY,KACVC,QAAS,MAGAC,EAAc,WAAmC,IAAlCN,EAAiC,uDAAzBH,EAAcI,EAAW,uCACzD,OAAOA,EAAOP,MACZ,IFLuB,gBEMrB,OAAO,eACFM,EADL,CAEEG,kBAAkB,IAEtB,IFRuB,gBESrB,OAAO,eACFH,EADL,CAEEG,kBAAkB,IAEpB,IFXmB,cEYjB,OAAO,eACFH,EADL,CAEEK,QAASJ,EAAON,UAEpB,IFdsB,iBEepB,OAAO,eACFK,EADL,CAEEK,QAAS,OAEb,IFbsB,iBEcpB,OAAO,eACFL,EADL,CAEEI,WAAYH,EAAON,UAEvB,IFhByB,oBEiBvB,OAAO,eACFK,EADL,CAEEI,WAAY,OAElB,QACE,OAAOJ,ICtCFH,EAAe,CAC1BU,gBAAiB,GACjBC,gBAAiB,IAINC,EAAc,SAACT,EAAOC,GAC/B,OAAOA,EAAOP,MACZ,IHE2B,oBGDzB,OAAO,eACFM,EADL,CAEEO,gBAAiBN,EAAON,UAE5B,IHD2B,oBGEzB,OAAO,eACFK,EADL,CAEEQ,gBAAiBP,EAAON,UAE5B,QACE,MAAM,IAAIO,QCpBLL,EAAe,CAC1Ba,MAAO,MAIIC,EAAe,WAAmC,IAAlCX,EAAiC,uDAAzBH,EAAcI,EAAW,uCAC1D,OAAOA,EAAOP,MACZ,IJYwB,iBIXtB,OAAO,eACFM,EADL,CAEEU,MAAOT,EAAON,UAElB,IJSyB,kBIRvB,OAAO,eACFK,EADL,CAEEU,MAAO,KAGX,QACE,OAAOV,I,gBCnBAY,gB,gBCkCAC,EA9BG,WAChB,IAAMC,EAAUC,qBAAW1B,GAqBzB,OAlBF2B,qBAAU,WACR,GAAGF,EAAQG,QAAQC,kBAAmB,CACpC,IAAMb,EAAUS,EAAQG,QAAQE,YAChCL,EAAQM,kBACRN,EAAQO,qBAAqBhB,GAC5BiB,IAAMC,KAAK,6BAA8BlB,GACvCmB,KAAKF,IAAMG,IAAI,6BAA8B,CAACC,OAAQ,CAACC,MAAOtB,EAAQA,QAAQsB,SAC5EH,MAAK,SAAAI,GAAG,OAAId,EAAQe,mBAAmBD,EAAIE,UAC7CN,KAAKO,EAAQC,QAAQ,WAGxBlB,EAAQmB,mBACRnB,EAAQoB,0BACRpB,EAAQoB,0BACRH,EAAQC,QAAQ,OAEf,CAAClB,EAAQG,QAAQE,YAAaL,IAG7B,+BChBOqB,EAVF,SAAAC,GAAK,OACd,oCAEE,6BAEA,6BACA,+B,QCyBSC,EA9BA,WACb,IAAMvB,EAAUC,qBAAW1B,GAEzB,OACI,6BACE,kBAAC,IAAD,CAAMiD,GAAG,IAAIC,MAAO,CAACC,QAAS,QAA9B,QAGA,kBAAC,IAAD,CAAMF,GAAG,WAAWC,MAAO,CAACC,QAAS,QAArC,WAGA,kBAAC,IAAD,CAAMF,GAAG,aAAaC,MAAO,CAACC,QAAS,QAAvC,cAGA,kBAAC,IAAD,CAAMF,GAAG,kBAAkBC,MAAO,CAACC,QAAS,QAA5C,mBAGA,kBAAC,IAAD,CAAMF,GAAG,gBAAgBC,MAAO,CAACC,QAAS,QAA1C,iBAGA,kBAAC,IAAD,CAAMF,GAAG,SAASC,MAAO,CAACC,QAAS,QAAnC,SAGE1B,EAAQ2B,UAEN,4BAAQC,QAAS,kBAAM5B,EAAQG,QAAQ0B,WAAvC,UADA,4BAAQD,QAAS,kBAAM5B,EAAQG,QAAQ2B,UAAvC,WCiECC,EAvFS,WACtB,IAAM/B,EAAUC,qBAAW1B,GADC,EAGFyD,mBAAS,GAHP,mBAGrBC,EAHqB,KAGdC,EAHc,OAKgBF,mBAAS,MALzB,mBAKrBG,EALqB,KAKLC,EALK,OAOFC,qBAAWpD,EAAmBA,GAP5B,mBAOrBC,EAPqB,KAOdoD,EAPc,KAS5BpC,qBAAU,WACNqC,YAAW,kBAAMH,EAAkB,sBAAqB,OACzD,CAACH,IAkCJ,OACE,6BACE,6BACA,4BAAQL,QAAS,WA1BnBQ,EAAkB,iBA0BhB,mBACA,4BAAQR,QAAS,WArBnBU,EVtBK,CACL1D,KCZmB,cSsDjB,kBACA,4BAAQgD,QAAS,WAhBnBU,EVtBK,CACL1D,KChBmB,cSqDjB,mBACA,4BAAQgD,QAAS,WAbnB5B,EAAQwC,wBAaN,0BACA,4BAAQZ,QAAS,WAVnB5B,EAAQyC,yBAUN,2BACA,4BAAQb,QAAS,WAvCnBM,EAASD,EAAQ,KAuCf,qBACA,4BAAQL,QAAS,WApCnBM,EAASD,EAAQ,KAoCf,qBACA,6BACA,6BACCjC,EAAQ0C,sBACL,gCAAM1C,EAAQ0C,sBAAd,KACA,8CAEJ,6BACCxD,EAAMF,WACH,yDACA,0DAEJ,6BACCgB,EAAQ2C,WACL,kEACA,mEAEJ,6BACCR,EACG,+BAAMA,GACN,yCAEJ,6BACA,2CAAiBF,GACjB,6BACA,gCC7ESW,EANE,SAAAtB,GAAK,OAClB,0CCwEWuB,EArEI,WACjB,IAAM7C,EAAUC,qBAAW1B,GADJ,EAGeyD,mBAAS,IAHxB,mBAGhBc,EAHgB,KAGHC,EAHG,OAIef,mBAAS,IAJxB,mBAIhBgB,EAJgB,KAIHC,EAJG,OAMGZ,qBAAW1C,EACAA,GAPd,mBAMhBT,EANgB,KAMToD,EANS,KA6BrB,OACE,6BACE,0BAAMY,SAjBiB,SAACC,GAC5BA,EAAMC,iBACNH,EAAeE,EAAME,OAAOrB,SAASC,SAgB/B,oDACA,2BAAOqB,GAAG,WAAWC,SAvBA,SAACJ,GAAD,OAC3BJ,EAAeI,EAAME,OAAOpB,QAsB+BrD,KAAK,SAC1D,4BAAQA,KAAK,UAAb,aAEF,6BACA,0BAAMsE,SAdmB,SAACC,GAC9BA,EAAMC,iBACNd,EAASkB,EAA0BL,EAAME,OAAOhB,WAAWJ,UAarD,sDACA,2BAAOqB,GAAG,aAAaC,SApBA,SAACJ,GAAD,OAC7Bb,EAASkB,EAA0BL,EAAME,OAAOpB,SAmBerD,KAAK,SAC9D,4BAAQA,KAAK,UAAb,aAEF,6BACA,0BAAMsE,SAAUlD,EAAQyD,kBACtB,sDACA,2BAAOH,GAAG,aAAaC,SAAUvD,EAAQ0D,iBAAkB9E,KAAK,SAChE,4BAAQA,KAAK,UAAb,aAEF,6BAEA,+CACA,sCAAYkE,GACZ,sCAAYE,GACZ,6BACChD,EAAQ2D,MACT,iDACA,sCAAYzE,EAAMO,iBAClB,sCAAYP,EAAMQ,iBAClB,6BACA,iDACA,sCAAYM,EAAQ4D,uBACpB,sCAAY5D,EAAQ0C,uBACpB,6BACA,+BC7DOmB,EANU,SAAAvC,GAAK,OAC1B,mD,iBCmBYwC,EAjBD,SAACxC,GACd,IAAMtB,EAAUC,qBAAW1B,GAC3B,OACE,yBAAKwF,UAAU,eACf,6BACA,4DACE,kBAAC,IAAD,CAAQC,MAAM,UACNC,KAAK,QACLC,QAAQ,YACRtC,QAAS,kBAAM5B,EAAQG,QAAQ2B,UAHvC,a,qJCyIUqC,EAlIA,WACd,IAAMnE,EAAUC,qBAAW1B,GADP,EAGWyD,mBAAS,CAAEoC,MAAM,EACNC,QAAS,KACTzE,MAAO,KAL7B,mBAGb0E,EAHa,KAGDC,EAHC,KAQpBrE,qBAAU,WACR,IAAMsE,EAAUxE,EAAQyE,eAAe,GAAGC,IAC1ClE,IAAMG,IAAI,qBAAsB,CAACC,OAAQ,CAAE4D,QAASA,KACjD9D,MAAK,SAACI,GAAD,OAASyD,EAAS,eAAID,EAAL,CAAiB1E,MAAM,YAAKkB,EAAIE,YACtD2D,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,SAGhC,IAIMG,EAAmB,WACvBR,EAAS,CAACH,MAAM,EAAOC,QAAS,QAgC5BW,EAAc,SAAAvE,GAAI,OACtB,kBAAC,IAAD,CAAMgB,MAAO,CAACwD,MAAO,QAASC,OAAQ,QAASC,aAAc,OAAQC,cAAe,SAClF,kBAAC,IAAD,CACEC,MAAO,kBAAC,IAAD,CAAM7D,GAAI,CAAC8D,SAAS,SAAW7E,EAAKA,KAAK8E,IAAKrG,MAAO,CAACuB,UAClDA,EAAKA,KAAK4E,OAErBG,UACI,yBAAKzB,UAAU,cACb,yBAAKA,UAAU,WACZtD,EAAKA,KAAKgF,cAEb,yBAAK1B,UAAU,WACb,kBAAC,IAAD,CAAMvC,GAAI,CAAC8D,SAAS,aAAe7E,EAAKA,KAAK8E,IAAKrG,MAAM,CAACuB,UACvD,yCAIF,4BAAQmB,QAAS,kBAtDN2D,EAsD4B9E,EAAKA,KAAK8E,SArD7DhB,EAAS,CAACH,MAAM,EAAMC,QAASkB,IADT,IAACA,IAsDX,cAOV,6BACA,kBAAC,IAAD,KACE,0BAAM9D,MAAO,CAACiE,SAAU,WAAxB,IAAsCjF,EAAKA,KAAKkF,KAAhD,QAOF,OACI,6BACE,6BACA,kBAAC,IAAD,CAAMnE,GAAI,CAAC8D,SAAS,iBAAmBtF,EAAQyE,eAAe,GAAGC,MAChE,kBAAC,IAAD,CAAQR,QAAQ,YAAYF,MAAM,UAAUpF,KAAK,UAAjD,kBAID,mBA5DY,SAAC0C,GACrB,OACE,6BACE,4BAAKA,EAAM/B,QAAQA,QAAQqG,UAC3B,6BACA,yBAAKC,IAAKvE,EAAM/B,QAAQA,QAAQuG,QAASC,IAAI,KAC7C,6BACA,gCAAMzE,EAAM/B,QAAQA,QAAQsB,OAC5B,6BACA,gCAAMS,EAAM/B,QAAQA,QAAQyG,KAA5B,KACA,6BACA,iDACC1E,EAAM/B,QAAQA,QAAQ0G,eAAiB,kCAAa,iCACrD,gCA+CI,CAAe1G,QAASS,EAAQkG,gBAEhC,6BACG5B,EAAW1E,MACR0E,EAAW1E,MAAMuG,KAAI,SAAA1F,GAAI,OACzB,kBAACuE,EAAD,CAAavE,KAAMA,EAAM2F,IAAK3F,EAAK8E,SACnC,MAEN,kBAAC,IAAD,CACEnB,KAAME,EAAWF,KACjBiC,QAAStB,EACTuB,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC,IAAD,CAAajD,GAAG,sBAAhB,qBACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,GAAG,4BADL,kBAKE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ1B,QAAS,kBA5FlB,WACjB,IAAMyC,EAAUC,EAAWD,QAC3B7D,IAAMgG,OAAO,0BAA2B,CAACxF,KAAM,CAAEqD,QAASA,KACvD3D,MAAK,kBAAMF,IAAMgG,OAAO,mBAAoB,CAACxF,KAAM,CAAEqD,QAASA,KAC1D3D,MAAK,SAAAI,GAAG,OAAI+D,QAAQC,IAAIhE,SAC5B6D,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MACzBlE,MAAK,kBAAMqE,OACXrE,MAAK,kBAAM6B,YAAW,kBAAMtB,EAAQC,QAAQ,OAAM,QAqFZuF,KAAvB,SAGA,kBAAC,IAAD,CAAQ7E,QAAS,kBAAMmD,MAAvB,e,oBC/BN2B,GA3FC,SAACpF,GAAW,IAAD,EAEKU,mBAAS,IAFd,mBAEnBzC,EAFmB,KAEVoH,EAFU,OAGK3E,mBAAS,IAHd,mBAGnB4E,EAHmB,KAGRC,EAHQ,KAK1B3G,qBAAU,WACR,IAAM4G,EAAWxF,EAAMyF,SAAS7H,MAAMuB,KAAKA,KAAKuG,OAChDxG,IAAMG,IAAI,kCAAmC,CAACC,OAAQ,CAACkG,SAAUA,KAC9DpG,MAAK,SAAAI,GAAG,OAAK6F,EAAW,eAAI7F,EAAIE,UAChC2D,OAAM,SAAUsC,GACbpC,QAAQC,IAAImC,MAEjBzG,IAAMG,IAAI,0BAA2B,CAACC,OAAQ,CAACkG,SAAUA,KACtDpG,MAAK,SAAAI,GAAG,OAAK+F,EAAS,YAAI/F,EAAIE,UAC9B2D,OAAM,SAAUsC,GACbpC,QAAQC,IAAImC,MAEjBC,OAAOC,SAAS,CAACC,IAAK,EAAGC,KAAM,MAC9B,CAAC/F,EAAMyF,SAAS7H,MAAMuB,KAAKA,KAAKuG,SAGrC,IAkBMhC,EAAc,SAACvE,GAAD,OAClB,6BACC,kBAAC,IAAD,CAAMsD,UAAU,cACb,kBAAC,IAAD,CACEsB,MAAO,kBAAC,IAAD,CAAM7D,GAAI,CAAC8D,SAAS,SAAW7E,EAAKA,KAAK8E,IAAKrG,MAAO,CAACuB,UACrDA,EAAKA,KAAK4E,OAElBG,UACU,6BACE,6BACG8B,KAAO7G,EAAKA,KAAKgF,cAAc8B,OAAO,2BAEzC,6BAAO9G,EAAKA,KAAKuG,WAG/B,kBAAC,IAAD,KACI,0BAAMvF,MAAO,CAAEiE,SAAU,WAAajF,EAAKA,KAAKkF,KAAhD,SAOT,OACE,6BACA,yBAAK5B,UAAU,WACXxE,EACG,mBA7CY,SAAC+B,GAAD,OACpB,6BACE,yBAAKyC,UAAU,WACZ,4BACIzC,EAAM/B,QAAQuH,WAGlB,yBAAK/C,UAAU,WACf,kBAAC,IAAD,CAAMvC,GAAI,CAAC8D,SAAS,gBAAiBpG,MAAM,CAACoC,WACxC,kBAAC,IAAD,CAAQ4C,QAAQ,YAAYF,MAAM,UAAUpF,KAAK,UAAjD,qBAoCD,CAAeW,QAASA,IACxB,MAIR,6BACA,wBAAIwE,UAAU,cAEb,kDACE,yBAAKA,UAAU,cACb6C,EACCA,EAAUT,KAAI,SAAA1F,GAAI,OAClB,yBAAK2F,IAAM3F,EAAK8E,KACb,kBAACP,EAAD,CAAcvE,KAAMA,IACpB,iCAGJ,Q,oBC/BO+G,GAtDI,SAAClG,GACnB,IAAMtB,EAAUC,qBAAW1B,GAwBzB,OACA,6BACE,0BAAM2E,SAxBW,SAAAC,GACnBA,EAAMC,iBACN,IAAMqE,EAAsBnG,EAAMyF,SAAS7H,MAAMoC,MAAM/B,QAAQ,GAAGuH,SAK5D9F,EAAO,CAAC0G,eAJgB1H,EAAQyE,eAAe,GAAGqC,SAK1Ca,WAAYF,EACZpC,MALQlC,EAAME,OAAOgC,MAAMpD,MAM3B0D,KALOxC,EAAME,OAAOsC,KAAK1D,OAMvC4C,QAAQC,IAAIxD,GACZd,IAAMC,KAAK,wBAAyBO,GACjCN,MAAK,SAAAkH,GAAQ,OAAI/C,QAAQC,IAAI8C,MAC7BjD,OAAM,SAAUsC,GACfpC,QAAQC,IAAImC,MAEbvG,KAAK6B,YAAY,WAAatB,EAAQC,QAAQ,OAAQ,QAQrD,kBAAC,KAAD,CACEoC,GAAG,QACHuE,MAAM,QACNC,OAAO,WAET,6BACE,kBAAC,KAAD,CACAxE,GAAG,OACHyE,WAAS,EACTC,KAAK,IACLF,OAAO,WAET,6BACE,kBAAC,IAAD,CAAQ5D,QAAQ,YAAYF,MAAM,UAAUpF,KAAK,UAAjD,WAEJ,6BACC,8BACC,4BAAQmF,UAAU,eAAenC,QAAS,kBAAMX,EAAQC,QAAQ,OAAhE,e,uGC6BQ+G,GAvEK,SAAC3G,GACpB,IAAMtB,EAAUC,qBAAW1B,GADG,EAGEyD,mBAAS,IAHX,mBAGvBkG,EAHuB,KAGbC,EAHa,KAK9BjI,qBAAU,WACR,IAAM4G,EAAW9G,EAAQyE,eAAe,GAAGqC,SAC3CtG,IAAMG,IAAI,wBAAyB,CAACC,OAAQ,CAACkG,SAAUA,KACpDpG,MAAK,SAAAI,GAAG,OAAKqH,EAAY,YAAIrH,EAAIE,UACjC2D,OAAM,SAAUsC,GACbpC,QAAQC,IAAImC,QAEhB,IAEH,IAAMmB,EAAiB,SAAC9G,GAAD,OACrB,kBAAC,KAAD,KACI,kBAAC,KAAD,KACE,+BAAI,0CAAJ,KAA8BA,EAAM+G,QAAQX,eAA5C,KACA,+BAAI,0CAAJ,MAAgCpG,EAAM+G,QAAQC,cAA9C,KACA,2BAAG,6CAAH,KAAiChH,EAAM+G,QAAQE,aAA/C,KACA,mCAAUjH,EAAM+G,QAAQ5C,aAAxB,KACA,6BACA,kBAAC,IAAD,CAAMjE,GAAI,CAAC8D,SAAS,kBAAmBpG,MAAM,CAACoC,WAC1C,0CAIJ,4BAAQM,QAAS,kBAAM4G,EAAclH,EAAM+G,QAAQI,OAAnD,YACA,6BACA,6BACA,4BAAQ7G,QAAS,kBAAMX,EAAQyH,WAA/B,eAKHF,EAAgB,SAACC,GACrBjI,IAAMgG,OAAO,0BAA2B,CAAExF,KAAM,CAAEyH,IAAKA,KACtD/H,MAAK,SAAAI,GAAG,OAAI+D,QAAQC,IAAIhE,MACxB6D,OAAM,SAAUsC,GACbpC,QAAQC,IAAImC,MAEdvG,MAAK,kBAAM6B,YAAY,WAAatB,EAAQC,QAAQ,OAAQ,SAKhE,OACE,6BACE,yBAAK6C,UAAU,WACf,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,SAAY,8CAAZ,OAGJ,kBAAC,KAAD,KACImE,EACEA,EAAS/B,KAAK,SAAAkC,GAAO,OACrB,kBAACD,EAAD,CAAgBhC,IAAKiC,EAAQI,IAAKJ,QAASA,OAE3C,UCAEM,GAjEO,SAACrH,GACtB,IAAMtB,EAAUC,qBAAW1B,GAqBzB,OACE,6BACA,0CACA,yBAAKwF,UAAU,cACb,6BACE,2BAAG,gCAASzC,EAAMyF,SAAS7H,MAAMoC,MAAM+G,QAAQC,iBAEjD,6BACE,2BAAIhH,EAAMyF,SAAS7H,MAAMoC,MAAM+G,QAAQE,eAEzC,6BACE,uCAAajH,EAAMyF,SAAS7H,MAAMoC,MAAM+G,QAAQX,kBAIpD,yBAAK3D,UAAU,WACb,0BAAMb,SAnCS,SAAAC,GACnBA,EAAMC,iBACN,IAAMqE,EAAsBnG,EAAMyF,SAAS7H,MAAMoC,MAAM+G,QAAQX,eAKzD1G,EAAO,CAAC0G,eAJgB1H,EAAQyE,eAAe,GAAGqC,SAK1Ca,WAAYF,EACZpC,MALQlC,EAAME,OAAOgC,MAAMpD,MAM3B0D,KALOxC,EAAME,OAAOsC,KAAK1D,OAMvCzB,IAAMC,KAAK,wBAAyBO,GACjCN,MAAK,SAAAkH,GAAQ,OAAI/C,QAAQC,IAAI8C,MAC7BjD,OAAM,SAAUsC,GACfpC,QAAQC,IAAImC,MAEbvG,KAAK6B,YAAY,WAAatB,EAAQC,QAAQ,OAAQ,QAoBnD,kBAAC,KAAD,CACEoC,GAAG,QACHuE,MAAM,QACNC,OAAO,WAET,6BACE,kBAAC,KAAD,CACAxE,GAAG,OACHyE,WAAS,EACTC,KAAK,IACLF,OAAO,WAET,6BACE,kBAAC,IAAD,CAAQ5D,QAAQ,YAAYF,MAAM,UAAUpF,KAAK,UAAjD,WAEF,8BAEF,yBAAKmF,UAAU,WACb,4BAAQA,UAAU,eAAenC,QAAS,kBAAMX,EAAQC,QAAQ,OAAhE,eCoMK0H,I,cAlPD,SAACtH,GACf,IAAMtB,EAAUC,qBAAW1B,GADF,EAIMyD,mBAAS,CAAEpC,MAAO,GACPiJ,SAAS,EACTC,iBAAiB,EACjBC,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,GAC1BC,SAAU,KACVC,eAAgB,EAEhBC,YAAa,EACbC,UAAW,KACXC,YAAa,KACbC,aAAc,GACdC,eAAgB,IAfjC,mBAIlBhF,EAJkB,KAINC,EAJM,KAmBvBrE,qBAAU,WAMR,GALGF,EAAQuJ,YACT/I,IAAMG,IAAI,qBACPD,MAAK,SAAAI,GAAG,OAAId,EAAQwJ,eAAe1I,EAAIE,SACvC2D,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAE5B5E,EAAQuJ,aAAejF,EAAWuE,QAAS,CAC7C,IAAMY,EAAkB,EAAInF,EAAWgF,eACjCI,EAAmBD,EAAkBnF,EAAWgF,eAChDK,EAAYC,KAAKC,KAAK7J,EAAQuJ,WAAWO,OAAOxF,EAAWgF,gBAEjE/E,EAAS,eAAID,EAAL,CACEuE,SAAS,EACTjJ,MAAM,YAAKI,EAAQuJ,YACnBJ,UAAWnJ,EAAQuJ,WAAWO,OAC9Bd,SAAUW,EACVP,YAAapJ,EAAQuJ,WAAWQ,MAAML,EACAD,SAG/C,CAACzJ,EAASsE,IAGfpE,qBAAU,WACR,IACIuJ,EAAyB,EADlBnF,EAAW4E,YAElBQ,EAAmBD,EAAkB,EAEzClF,EAAS,eAAID,EAAL,CACE8E,YAAa9E,EAAW1E,MAAMmK,MAAML,EACAD,QAC7C,CAACnF,EAAW4E,cAKhB,IAoBKlE,EAAc,SAAAvE,GAAI,OACtB,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE4E,MAAO,kBAAC,IAAD,CAAM7D,GAAI,CAAC8D,SAAS,SAAW7E,EAAKA,KAAK8E,IAAKrG,MAAO,CAACuB,UAClDA,EAAKA,KAAK4E,OAErBG,UACI,yBAAKzB,UAAU,cACb,yBAAKA,UAAU,WACZuD,KAAO7G,EAAKA,KAAKgF,cAAc8B,OAAO,2BAEzC,yBAAKxD,UAAU,WAAf,MAEE,kBAAC,IAAD,CAAMtC,MAAO,CAACuI,YAAa,MAAOC,eAAgB,QAC5CzI,GAAI,CAAC8D,SAAS,SAAW7E,EAAKA,KAAKuG,OAAQ9H,MAAM,CAACuB,UACrDA,EAAKA,KAAKuG,SAGd,yBAAKjD,UAAU,WACd,uBAAGA,UAAU,kBAAb,YACA,yBAAKA,UAAU,6BAAf,IAA6CtD,EAAKA,KAAKyJ,MAAvD,SAKV,6BACA,kBAAC,IAAD,KACE,0BAAMzI,MAAO,CAACiE,SAAU,WAAxB,IAAsCjF,EAAKA,KAAKkF,KAAhD,SAMAwE,EAAc,SAACC,GACnBlD,OAAOC,SAAS,CAACC,IAAI,EAAGC,KAAM,EAAGgD,SAAU,WAG3C,IAAIC,EAAYF,EAAO,EACnBG,EAAYH,EAAO,EAIpBA,EAAO,GAAKA,EAAO9F,EAAW0E,SAAW,GAC1CzE,EAAS,eAAID,EAAL,CACE4E,YAAakB,EACbrB,YAAa,CAACwB,EAAY,EACZA,EACAH,EACAE,EACAA,EAAY,MAGzB,IAATF,GACD7F,EAAS,eAAID,EAAL,CACC4E,YAAakB,EACZrB,YAAa,CAACwB,EACAH,EACAE,EACAA,EAAY,EACZA,EAAY,MAI1B,IAATF,GACD7F,EAAS,eAAID,EAAL,CACC4E,YAAakB,EACZrB,YAAa,CAACqB,EACAE,EACAA,EAAY,EACZA,EAAY,EACZA,EAAY,MAInCF,IAAS9F,EAAW0E,UACrBzE,EAAS,eAAID,EAAL,CACE4E,YAAakB,EACbrB,YAAa,CAACwB,EAAY,EACZA,EAAY,EACZA,EAAY,EACZA,EACAH,MAGvBA,IAAS9F,EAAW0E,SAAW,GAChCzE,EAAS,eAAID,EAAL,CACE4E,YAAakB,EACbrB,YAAa,CAACwB,EAAY,EACZA,EAAY,EACZA,EACAH,EACAE,OAO7B,OACI,6BACA,yBAAK7I,MAAO,CAAC+I,QAASlG,EAAWkG,QAASC,WAAY,oBACtD,6BACEzK,EAAQ2B,UACL,kBAAC,IAAD,CAAMH,GAAG,YACN,kBAAC,IAAD,CAAQ0C,QAAQ,YAAYF,MAAM,WAAlC,aAIJ,kBAAC,IAAD,CAAMxC,GAAG,WACL,kBAAC,IAAD,CAAQ0C,QAAQ,YAAYF,MAAM,WAAlC,yBAMR,6BACA,kBAAC,KAAD,CACEV,GAAG,SACHuE,MAAM,SACNC,OAAO,SACPvE,SAvIe,SAACJ,GACnBoB,EAAS,eAAID,EAAL,CAAiB+E,aAAc,MACvC,IAAMqB,EAAevH,EAAME,OAAOpB,MAClCzB,IAAMG,IAAI,sBAAuB,CAACC,OAAQ,CAAC8J,aAAcA,KACtDhK,MAAK,SAAAI,GAAG,OAAwB,IAApBA,EAAIE,KAAK8I,QAVSlK,EAWYkB,EAAIE,KAVhDuD,EAAS,eAAID,EAAL,CAAiB+E,aAAc,WACvC9E,EAAS,eAAID,EAAL,CAAiB+E,aAAa,YAAKzJ,OAUzB,KAZa,IAACA,KAa9B+E,OAAM,SAAUsC,GACfpC,QAAQC,IAAImC,SAiIf,6BACC,4BAAQrF,QAAS,kBAAMiD,QAAQC,IAAIR,KAAnC,YACA,4BAAQ1C,QAAS,kBAAMiD,QAAQC,IAAI9E,KAAnC,YACA,6BACA,6BACGsE,EAAW+E,aACR/E,EAAW+E,aAAalD,KAAI,SAAA1F,GAAI,OAChC,kBAACuE,EAAD,CAAaoB,IAAK3F,EAAK8E,IAAM,IAAM9E,KAAMA,OAExC,MAIR,qCACE,6BACG6D,EAAW8E,YACR9E,EAAW8E,YAAYjD,KAAI,SAAA1F,GAAI,OAC/B,kBAACuE,EAAD,CAAaoB,IAAK3F,EAAK8E,IAAK9E,KAAMA,OAElC,MAGN,6BACI,yBAAKsD,UAAU,WACX,4BAAQnC,QAAS,kBAAMuI,EAAY,KAAnC,WACA,4BAAQvI,QAAS,kBAAMuI,EAAY7F,EAAW4E,YAAc,KAA5D,UACI5E,EAAWyE,YAAY5C,KAAI,SAACiE,GAAD,OACxB,yBACExI,QAAS,kBAAMuI,EAAYC,IAC3BrG,UAAWO,EAAW4E,cAAgBkB,EACtB,oBACA,kBAChBhE,IAAKgE,GACFA,MAGX,4BAAQxI,QAAS,kBAAMuI,EAAY7F,EAAW4E,YAAc,KAA5D,UACA,4BAAQtH,QAAS,kBAAMuI,EAAY7F,EAAW0E,YAA9C,eC1MA2B,GA7CC,WACd,IAAM3K,EAAUC,qBAAW1B,GAkBzB,OACE,6BACE,0BAAM2E,SAlBS,SAACC,GACpBA,EAAMC,iBACN,IAAMoB,EAAUxE,EAAQyE,eAAe,GAAGC,IACpCoC,EAAW9G,EAAQyE,eAAe,GAAGqC,SACrC9F,EAAO,CAACqE,MAAOlC,EAAME,OAAOgC,MAAMpD,MAC1B0D,KAAMxC,EAAME,OAAOsC,KAAK1D,MACxB6E,SAAUA,EACVpC,IAAKF,GAEnBhE,IAAMC,KAAK,qBAAsBO,GAC9BN,MAAK,SAAAkH,GAAQ,OAAI/C,QAAQC,IAAI8C,MAC7BjD,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC3BlE,KAAK6B,YAAW,kBAAMtB,EAAQC,QAAQ,OAAM,QAOzC,kBAAC,KAAD,CACEoC,GAAG,QACHuE,MAAM,QACNC,OAAO,WAET,6BACA,kBAAC,KAAD,CACExE,GAAG,OACHuE,MAAM,OACNE,WAAS,EACT6C,QAAQ,IACR9C,OAAO,WAER,6BACA,4BAAQlJ,KAAK,UAAb,aAEH,6BACA,4BAAQgD,QAAS,kBAAMX,EAAQC,QAAQ,YAAvC,cCqSO2J,GAtUE,SAACvJ,GAChB,IAAMtB,EAAUC,qBAAW1B,GADD,EAGKyD,mBAAS,CAAE8I,QAAS,GACTjC,SAAS,EACTkC,IAAK,EACLC,kBAAmB,EACnBC,gBAAiB,EACjBC,aAAc,GACdC,aAAc,KACdC,YAAa,KACbC,WAAW,EACXnB,MAAO,EACPoB,cAAe,GACfC,WAAY,KACZC,UAAW,KACXC,YAAa,KACbpH,QAAS,OAjBzB,mBAGnBC,EAHmB,KAGPC,EAHO,KAsBxBrE,qBAAU,WACLoB,EAAMyF,SAAS7H,QAAUoF,EAAWuE,UACrChE,QAAQC,IAAI,QACZP,EAAS,eAAID,EAAL,CACEuE,SAAS,EACTqB,MAAO5I,EAAMyF,SAAS7H,MAAMuB,KAAKA,KAAKyJ,MACtCoB,cAAehK,EAAMyF,SAAS7H,MAAMuB,KAAKA,KAAKiL,aAC9CH,WAAYjK,EAAMyF,SAAS7H,MAAMuB,KAAKA,KAAK4E,MAC3CmG,UAAWlK,EAAMyF,SAAS7H,MAAMuB,KAAKA,KAAKkF,KAC1C8F,YAAanK,EAAMyF,SAAS7H,MAAMuB,KAAKA,KAAKuG,OAC5C3C,QAAS/C,EAAMyF,SAAS7H,MAAMuB,KAAKA,KAAK8E,UAEjD,CAACjB,EACAhD,EAAMyF,WAEd7G,qBAAW,WACT,IAAIoB,EAAMyF,SAAS7H,QAAUoF,EAAWuE,QAAS,CAC/ChE,QAAQC,IAAI,QACZ,IAAMT,EAAU/C,EAAMyF,SAASzB,SAASqG,UAAU,GAElDnL,IAAMG,IAAI,gBACE,CAACC,OAAQ,CAACyD,QAASA,KAC5B3D,MAAK,SAAAI,GAAG,OAAwB,IAApBA,EAAIE,KAAK8I,OACVvF,EAAS,eAAID,EAAL,CACJuE,SAAS,EACTqB,MAAOpJ,EAAIE,KAAK,GAAGkJ,MACnBoB,cAAexK,EAAIE,KAAK,GAAG0K,aAC3BH,WAAYzK,EAAIE,KAAK,GAAGqE,MACxBmG,UAAW1K,EAAIE,KAAK,GAAG2E,KACvB8F,YAAa3K,EAAIE,KAAK,GAAGgG,OACzB3C,QAASvD,EAAIE,KAAK,GAAGuE,OAE1B,QAEVZ,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,SAE/B,CAACN,EACAhD,EAAMyF,WAET7G,qBAAU,WACR,IAAIoE,EAAW6G,cACV7J,EAAMyF,SAAS7H,MAAO,CACvB,IAAMmF,EAAU/C,EAAMyF,SAASzB,SAASqG,UAAU,GAClDnL,IAAMG,IAAI,2BACE,CAACC,OAAQ,CAACyD,QAASA,KAC5B3D,MAAK,SAAAI,GAAG,OAAwB,IAApBA,EAAIE,KAAK8I,OACLvF,EAAS,eAAID,EAAL,CAAiB6G,aAAa,YAAKrK,EAAIE,SAC/C,QAChB2D,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,SAGjC,CAACtD,EAAMyF,SAAUzC,IAGnB,IAwBOsH,EAAsB,WAC1BrH,EAAS,eAAID,EAAL,CAAiB2G,gBAAiB,MAIvCY,EAAiB,SAACvK,GACtB,OACA,yBAAKyC,UAAWO,EAAW0G,oBAAsB1J,EAAMwJ,QAAQC,IAC3C,iBACA,iBAClB,6BACA,2BAAIzJ,EAAMwJ,QAAQA,QAAlB,KACA,+BACmC,aAA/BxJ,EAAMwJ,QAAQrF,aACX,iCAAOnE,EAAMwJ,QAAQgB,SAChB,0CACA,6CACLxK,EAAMwJ,QAAQrF,cAGrB,mCAAUnE,EAAMwJ,QAAQ9D,OAAxB,MAEA,6BACC1F,EAAM8J,cAAgB9J,EAAMwJ,QAAQtG,QAChClD,EAAMyK,UAUH,0BAAM7I,SAAU,SAACC,EAAO4H,GAAR,OAAgBiB,EAAa7I,EAAO7B,EAAMwJ,QAAQC,OAChE,2BACEkB,WAAW,EACXjG,KAAK,eACL1C,GAAG,kBACHuE,MAAM,UACN5F,MAAOqC,EAAW4G,aAClB3H,SAAU2I,IAEV,6BACA,kBAAC,IAAD,CAAQtN,KAAK,UAAb,SAGA,kBAAC,IAAD,CAAQA,KAAK,SAASgD,QAASgK,GAA/B,UAGA,4BAAQhK,QAAS,kBAAMuK,EAAoB7K,EAAMwJ,QAAQC,OAAzD,WAzBL,6BACG,kBAAC,IAAD,CAAQnJ,QAAS,kBAAM2C,EAAS,eAAID,EAAL,CACC2G,gBAAiB3J,EAAMwJ,QAAQC,IAC/BG,aAAc5J,EAAMwJ,QAAQA,aAF5D,SA4BJ,QAQJoB,EAA0B,SAAC/I,GAAD,OAC9BoB,EAAS,eAAID,EAAL,CACE4G,aAAc/H,EAAME,OAAOpB,UAiCjC+J,EAAe,SAAC7I,EAAO4H,GAC3B5H,EAAMC,iBACNyB,QAAQC,IAAI3B,GACZ0B,QAAQC,IAAIiG,GACZ,IAAMD,EAAU3H,EAAME,OAAO+I,gBAAgBnK,MACvCoK,EAAatB,EACb1G,EAAUC,EAAWD,QACrBG,EAAUxE,EAAQyE,eAAe,GAAGC,IACpCoC,EAAW9G,EAAQyE,eAAe,GAAGqC,SAIrCwF,EAAiB,CAACvB,IAAKsB,EACLvB,QAASA,EACTtG,QAASA,EACTwC,OAAQF,EACRrB,aANH,WAOGqG,UARP,GAUX9K,EAAO,CAAC+J,IAAKsB,EACLvB,QAASA,EACTzG,QAASA,EACTG,QAASA,EACTsC,SAAUA,GAExBtG,IAAM+L,IAAI,uBAAwBvL,GAC/BN,MAAK,SAAAI,GAAG,OAAI+D,QAAQC,IAAIhE,MACxB6D,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MA3IH,SAACkG,GAC3B,IAAM0B,EAAelI,EAAW6G,aAAasB,WAAU,SAAAC,GAAG,OAAIA,EAAI3B,MAAQD,EAAQC,OAC9E4B,EAAM,YAAOrI,EAAW6G,cAC5BwB,EAAOH,GAAgB1B,EAEvBvI,YAAW,kBAAMgC,EAAS,eAAID,EAAL,CAAiB6G,aAAa,YAAKwB,GAAS1B,gBAAiB,OAAM,KAuI7F2B,CAAoBN,IAGhBH,EAAsB,SAACpB,GAC3B,IAAMsB,EAAatB,EACnBlG,QAAQC,IAAIiG,GACZvK,IAAMgG,OAAO,sBAAuB,CAACxF,KAAM,CAACqL,WAAYA,KACrD3L,MAAK,SAAAI,GAAG,OAAI+D,QAAQC,IAAIhE,MACxB6D,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MA3IH,SAACmG,GAC3BxG,EAAS,eAAID,EAAL,CAAiB0G,kBAAmBD,KAC5C,IAAM4B,EAASrI,EAAW6G,aAAa0B,QAAO,SAAAH,GAAG,OAAIA,EAAI3B,MAAQA,KACjExG,EAAS,eAAID,EAAL,CAAiB6G,aAAcwB,KAyIxCG,CAAoB/B,IAsBtB,OACI,6BACE,6BACE,oCACCzG,EAAW6G,cAAgB7J,EAAMyF,SAAS7H,MACvC,6BACE,2BAAIoF,EAAWiH,YACf,2BAAIjH,EAAWkH,WACf,2BAAIlH,EAAWmH,cAEnB,KAGA,yBAAKhK,MAAO,CAACsL,OAAQ,WAAYnL,QAAS5B,EAAQ2B,UACN,kBAjClC,WAChB,IAAM6C,EAAUxE,EAAQyE,eAAe,GAAGC,IAGpC1D,EAAO,CAAE0D,IAAKF,EAASH,QAFbC,EAAWD,SAG3BQ,QAAQC,IAAI9D,GACRsD,EAAWgH,cAAc0B,SAASxI,IACrChE,IAAM+L,IAAI,iBAAkBvL,GACxBN,MAAO4D,EAAWgH,cAAc0B,SAASxI,IACpCF,EAAW+G,UACP9G,EAAS,eAAID,EAAL,CACE4F,MAAO5F,EAAW4F,MAAQ,EAC1BmB,WAAW,KACrB,MACT1G,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAmB0BqI,IACN,kBAAMhM,EAAQC,QAAQ,aAC9D,uBAAG6C,UAAU,kBAAb,YACA,2BAAOA,UAAU,6BACdO,EAAW4F,SAItB,6BAEE,0CACC5F,EAAW6G,aACR7G,EAAW6G,aAAahF,KAAI,SAAC2E,GAAD,OAC3B,kBAACe,EAAD,CAAgBf,QAASA,EACTM,YAAapL,EAAQyE,eACJzE,EAAQyE,eAAe,GAAGC,IAC1B,KACjB0B,IAAK0E,EAAQC,IACbgB,UAAWjB,EAAQC,MAAQzG,EAAW2G,qBAIvD,MAGN,6BACE,0BAAM/H,SAhIO,SAACC,GACpBA,EAAMC,iBACNmB,EAAS,eAAID,EAAL,CAAiBwG,QAAS,MAElC,IAAMA,EAAU3H,EAAME,OAAOyH,QAAQ7I,MAC/BuC,EAAUxE,EAAQyE,eAAe,GAAGC,IACpCoC,EAAW9G,EAAQyE,eAAe,GAAGqC,SACrCzC,EAAUC,EAAWD,QAIrB6I,EAAoB,CAACnC,IAFVnB,KAAKuD,MAAsB,IAAhBvD,KAAKwD,UAGNtC,QAASA,EACTtG,QAASA,EACTwC,OAAQF,EACRrB,aAPN,YASfzE,EAAO,CAAC8J,QAAS3H,EAAME,OAAOyH,QAAQ7I,MAC9BoC,QAASA,EACTG,QAASA,EACTsC,SAAUA,GAExBtG,IAAMC,KAAK,wBAAyBO,GACjCN,MAAK,SAAAI,GAAG,OAAI+D,QAAQC,IAAIhE,MACxB6D,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC9BsC,OAAOmG,OAAO,CAACjG,IAAK,EAAGC,KAAM,EAAGgD,SAAU,WArHhB,SAAC6C,GACtB5I,EAAW6G,aACV5G,EAAS,eAAID,EAAL,CAAiB6G,aAAa,CAAE+B,GAAH,mBACI5I,EAAW6G,kBAErD5G,EAAS,eAAID,EAAL,CAAiB6G,aAAc,CAAC+B,MAiH7CI,CAAoBJ,KAuGZ,kBAAC,KAAD,CACE5J,GAAG,UACHuE,MAAM,UACNC,OAAO,WAET,6BACA,6BACGjD,QAAQC,IAAI,UAEd9E,EAAQ2B,UACL,kBAAC,IAAD,CAAQuC,QAAQ,YAAYF,MAAM,UAAUpF,KAAK,UAAjD,UAGA,kBAAC,IAAD,CAAM4C,GAAG,WACN,kBAAC,IAAD,CAAS0C,QAAQ,YAAYF,MAAM,WAAnC,wBAOX,gCC9PKuJ,GApEE,SAACjM,GAChB,IAAMtB,EAAUC,qBAAW1B,GADD,EAGKyD,mBAAS,CAAEqD,MAAO/D,EAAMyF,SAAS7H,MAAMuB,KAAKA,KAAK4E,MACtCM,KAAMrE,EAAMyF,SAAS7H,MAAMuB,KAAKA,KAAKkF,OAJrD,mBAGnBrB,EAHmB,KAGPC,EAHO,KAsCxB,OACI,6BACE,0BAAMrB,SAxBO,SAACC,GACpBA,EAAMC,iBAEN,IAAMoB,EAAUxE,EAAQyE,eAAe,GAAGC,IACpCoC,EAAW9G,EAAQyE,eAAe,GAAGqC,SACrCvB,EAAMjE,EAAMyF,SAAS7H,MAAMuB,KAAKA,KAAK8E,IAIrCvE,EAAO,CAACqE,MAHAlC,EAAME,OAAOgC,MAAMpD,MAInB0D,KAHDxC,EAAME,OAAOsC,KAAK1D,MAIjBsD,IAAKA,EACLb,IAAKF,EACLsC,SAAUA,GAExBtG,IAAM+L,IAAI,gBAAiBvL,GACxBN,MAAK,SAAAI,GAAG,OAAI+D,QAAQC,IAAIhE,MACxB6D,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MACzBlE,KAAK6B,YAAW,kBAAMtB,EAAQC,QAAQ,cAAa,QAO9C,kBAAC,KAAD,CACEoC,GAAG,QACHuE,MAAM,QACNC,OAAO,SACP7F,MAAOqC,EAAWe,MAClB9B,SAtCc,SAACJ,GACzBoB,EAAS,eAAID,EAAL,CAAiBe,MAAOlC,EAAME,OAAOpB,YAuCrC,6BACA,kBAAC,KAAD,CACEqB,GAAG,OACHuE,MAAM,OACNE,WAAS,EACTC,KAAK,IACLF,OAAO,SACP7F,MAAOqC,EAAWqB,KAClBpC,SA5Ca,SAACJ,GACxBoB,EAAS,eAAID,EAAL,CAAiBqB,KAAMxC,EAAME,OAAOpB,YA6CtC,6BACA,4BAAQrD,KAAK,UAAb,aAEA,6BACA,kBAAC,IAAD,CAAQgD,QAAS,kBAAMX,EAAQyH,WAA/B,cC5CJ8E,GAAe,SAAC,GAAD,IAAaC,EAAb,EAAEC,UAAsBC,EAAxB,EAAwBA,KAAxB,OACnB,kBAAC,IAAD,CAAOC,OAAQ,SAAAtM,GAAK,OAAa,IAATqM,EACpB,kBAACF,EAAD,eAAWE,KAAMA,GAAUrM,IAC3B,kBAAC,IAAD,CAAUE,GAAI,CAAC8D,SAAS,iBAkEfuI,GA3DA,WACX,IAAM7N,EAAUC,qBAAW1B,GAEzB,OACE,6BACE,kBAAC,IAAD,CAAQ0C,QAASA,GACjB,kBAAC,EAAD,MACA,6BACA,6BACA,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6M,OAAK,EAACC,KAAK,IAAIL,UAAWrM,IACjC,kBAAC,IAAD,CAAO0M,KAAK,aAAaL,UAAWM,IAEpC,kBAAC,IAAD,CAAOD,KAAK,kBAAkBL,UAAW3L,IACzC,kBAAC,IAAD,CAAOgM,KAAK,aAAaL,UAAW3N,IACpC,kBAAC,IAAD,CAAOgO,KAAK,UAAUL,UAAW5J,IAEjC,kBAAC,IAAD,CAAOiK,KAAK,SAASL,UAAW9E,KAChC,kBAAC,IAAD,CAAOmF,KAAK,aAAaL,UAAW7C,KACpC,kBAAC,IAAD,CAAOkD,KAAK,iBAAiBL,UAAWH,KACxC,kBAAC,IAAD,CAAOQ,KAAK,WAAWL,UAAW/C,KAElC,kBAAC,IAAD,CAAOoD,KAAK,cAAcL,UAAYhH,KAEtC,kBAAC,GAAD,CAAcqH,KAAK,WACLJ,KAAM3N,EAAQ2B,UACd+L,UAAWvJ,IAEzB,kBAAC,GAAD,CAAc4J,KAAK,eACLJ,KAAM3N,EAAQ2B,UACd+L,UAAYlG,KAE1B,kBAAC,GAAD,CAAcuG,KAAK,oBACLJ,KAAM3N,EAAQ2B,UACd+L,UAAYzF,KAC1B,kBAAC,GAAD,CAAc8F,KAAK,kBACLJ,KAAM3N,EAAQ2B,UACd+L,UAAY/E,KAE1B,kBAAC,GAAD,CAAcoF,KAAK,gBACLJ,KAAM3N,EAAQ2B,UACd+L,UAAW7J,IACzB,kBAAC,GAAD,CAAckK,KAAK,WACLJ,KAAM3N,EAAQ2B,UACd+L,UAAWvJ,IACzB,kBAAC,IAAD,CAAO4J,KAAK,YACLH,OAAQ,SAACtM,GACa,OADDtB,EAAQiO,WAAW3M,GACX,kBAAC,EAAD,c,oBCzE5CqM,GAAO,I,kDCVXO,MAAQ,IAAIA,KAAMC,QAAQ,CACxBC,OAAQ,oBACRC,SAAU,mCACVC,YAAa,iCACbC,aAAc,iBACdC,MAAO,yB,KAGTnO,YAAc,G,KAEdyB,MAAQ,WACJ,EAAKoM,MAAMO,a,KAGfR,WAAa,WACX,EAAKC,MAAMQ,WAAU,SAAC9J,EAAK+J,GACzB,GAAGA,EAAY,CACbC,aAAaC,QAAQ,eAAgBF,EAAWG,aAChDF,aAAaC,QAAQ,WAAYF,EAAWI,SAE5C,IAAIC,EAAYC,KAAKC,UAAkC,IAAvBP,EAAWQ,WAAmB,IAAIC,MAAOC,WACzET,aAAaC,QAAQ,YAAaG,GAElC,EAAKM,aACL/M,YAAW,WAAQtB,EAAQC,QAAQ,gBAAiB,UAEpD2D,QAAQC,IAAIF,O,KAKlB2K,eAAiB,WACf,OAAGX,aAAaY,QAAQ,gBACFZ,aAAaY,QAAQ,gBAGlC,M,KAKXF,WAAa,WACX,IAAIR,EAAc,EAAKS,iBACpBT,GACD,EAAKZ,MAAMuB,OAAOC,SAASZ,GAAa,SAAClK,EAAKrF,GACvCA,IACD,EAAKc,YAAc,CAAEd,gB,KAO/BsC,OAAS,WACP+M,aAAae,WAAW,gBACxBf,aAAae,WAAW,YACxBf,aAAae,WAAW,aACxBpN,YAAW,WAAQtB,EAAQC,QAAQ,gBAAiB,M,KAGtDd,gBAAkB,WAChB,IAAI4O,EAAYC,KAAKW,MAAMhB,aAAaY,QAAQ,cAChD,OAAO,IAAIJ,MAAOC,UAAYL,ID4FnBa,GA7IM,SAACvO,GAAU,MAIce,qBAAWpD,EACAA,GALzB,mBAIrB6Q,EAJqB,KAINC,EAJM,OAuBoB1N,qBAAW7C,EACAA,GAxB/B,mBAuBrBwQ,EAvBqB,KAuBHC,EAvBG,OA0DoB5N,qBAAW1C,EACAA,GA3D/B,mBA0DrBuQ,EA1DqB,KA0DHC,EA1DG,OA4EsB9N,qBAAWxC,EACRA,GA7EzB,mBA4ErBuQ,EA5EqB,KA4EFC,EA5EE,KAiG5B,OACE,6BACA,kBAAC,EAAQC,SAAT,CACIrO,MAAO,CACLU,WAAYmN,EAAc9Q,WAC1BwD,oBAAqB,WA3F3BuN,EzBhBG,CACLnR,KCZmB,awBuHX6D,qBAAsB,WAtF5BsN,EzBhBG,CACLnR,KChBmB,awByHX+C,UAAWqO,EAAiB3Q,iBAC5BoF,eAAgBuL,EAAiB1Q,WACjC4G,aAAe8J,EAAiBzQ,QAEhCwB,mBAAoB,SAACxB,GAAD,OA3EJ,SAACA,GACvB0Q,EzBSwB,SAAC1Q,GAC7B,MAAO,CACLX,KChD0B,iBDiD1BC,QAASU,GyBZaiE,CAAuBjE,IA0EJgR,CAAgBhR,IACjDiR,sBAAuB,WAvE7BP,EzBaG,CACLrR,KCrD6B,uBwB+GrB2B,qBAAsB,SAAChB,GAAD,OArEL,SAACA,GACxB0Q,EzBvCqB,SAAC1Q,GAC1B,MAAO,CACLX,KChBuB,cDiBvBC,QAASU,GyBoCaiE,CAAoBjE,IAoECkR,CAAiBlR,IACpD6B,wBAAyB,WAjE/B6O,EzBnCG,CACLrR,KCrB0B,oBwByHlB0B,gBAAiB,WAvFvB2P,EzBRG,CACLrR,KCjCyB,mBwBgIjBuC,iBAAkB,WApFxB8O,EzBNG,CACLrR,KCrCyB,mBwBiIjBgF,sBAAuBsM,EAAiBzQ,gBACxCiD,sBAAuBwN,EAAiBxQ,gBACxC+D,iBAAkB,SAACN,GAAD,OAxDD,SAACA,GACxBA,EAAMC,iBACND,EAAMuN,UACNP,EAAoB3M,EAA0BL,EAAME,OAAOpD,WAAWgC,QAqDnC0O,CAAiBxN,IAC9CO,iBAAkB,SAACP,GAAD,OA7DD,SAACA,GACxBgN,EAAoB3M,EAA0BL,EAAME,OAAOpB,QA4DxB2O,CAAiBzN,IAG9CoG,WAAY6G,EAAkBxQ,MAC9B4J,eAAgB,SAAC5J,GAAD,OA9CD,SAACA,GACtByQ,EzBtBsB,SAACzQ,GAC3B,MAAO,CACLhB,KCzD0B,iBD0D1BC,QAASe,GyBmBc4D,CAAqB5D,IA6CTiR,CAAejR,IAC1CkR,kBAAmB,WA1CzBT,EzBlBG,CACLzR,KC9D2B,qBwB6HnBqP,WAAY,SAAC3M,GAAD,OAzCS,SAACA,GACzBA,EAAMyF,SAASgK,MAChBpD,GAAKM,aAuCsB+C,CAAqB1P,IAC5CnB,QAASwN,KAEX,kBAAC,GAAD,SEvIKsD,GAXH,WAER,OACE,qCAEA,kBAAC,GAAD,QCLNC,IAAStD,OAAO,kBAAC,GAAD,MAASuD,SAASC,eAAe,W","file":"static/js/main.4d0e51bc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context;\r\n","import * as ACTION_TYPES from './action_types'\r\n\r\n\r\nexport const SUCCESS = {\r\n  type: ACTION_TYPES.SUCCESS\r\n}\r\n\r\nexport const FAILURE = {\r\n  type: ACTION_TYPES.FAILURE\r\n}\r\n\r\nexport const success = () => {\r\n  return {\r\n    type: ACTION_TYPES.SUCCESS\r\n  }\r\n}\r\n\r\nexport const failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.FAILURE\r\n  }\r\n}\r\n\r\nexport const add_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.ADD_PROFILE,\r\n    payload: profile\r\n  }\r\n}\r\n\r\nexport const remove_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_PROFILE\r\n  }\r\n}\r\n\r\nexport const login_success = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_SUCCESS\r\n  }\r\n}\r\n\r\nexport const login_failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_FAILURE\r\n  }\r\n}\r\n\r\n\r\nexport const user_input_change = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n    payload: text\r\n  }\r\n}\r\n\r\nexport const user_input_submit = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_SUBMIT,\r\n    payload: text\r\n  }\r\n}\r\n\r\nexport const set_db_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_DB_PROFILE,\r\n    payload: profile\r\n  }\r\n}\r\n\r\nexport const remove_db_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_PROFILE\r\n  }\r\n}\r\n\r\nexport const set_db_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DB_POSTS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport const remove_db_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_POSTS\r\n  }\r\n}\r\n","\r\nexport const SUCCESS = \"SUCCESS\"\r\n\r\nexport const FAILURE = \"FAILURE\"\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\n\r\nexport const ADD_PROFILE = \"ADD_PROFILE\"\r\n\r\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\"\r\n\r\nexport const USER_INPUT_CHANGE = \"USER_INPUT_CHANGE\"\r\n\r\nexport const USER_INPUT_SUBMIT = \"USER_INPUT_SUBMIT\"\r\n\r\nexport const SET_DB_PROFILE = \"SET_DB_PROFILE\"\r\n\r\nexport const REMOVE_DB_PROFILE = \"REMOVE_DB_PROFILE\"\r\n\r\nexport const FETCH_DB_POSTS = \"FETCH_DB_POSTS\"\r\n\r\nexport const REMOVE_DB_POSTS = \"REMOVE_DB_POSTS\"\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nexport const initialState = {\r\n  stateprop1: false,\r\n}\r\n\r\nexport const Reducer1 = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.SUCCESS:\r\n        return {\r\n          ...state,\r\n          stateprop1: true,\r\n        }\r\n      case ACTION_TYPES.FAILURE:\r\n        return {\r\n          ...state,\r\n          stateprop1: false,\r\n        }\r\n      default:\r\n        throw new Error();\r\n    }\r\n}\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nexport const initialState = {\r\n  is_authenticated: false,\r\n  db_profile: null,\r\n    profile: null,\r\n}\r\n\r\nexport const AuthReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          is_authenticated: true\r\n        }\r\n      case ACTION_TYPES.LOGIN_FAILURE:\r\n        return {\r\n          ...state,\r\n          is_authenticated: false\r\n        }\r\n        case ACTION_TYPES.ADD_PROFILE:\r\n          return {\r\n            ...state,\r\n            profile: action.payload\r\n          }\r\n        case ACTION_TYPES.REMOVE_PROFILE:\r\n          return {\r\n            ...state,\r\n            profile: null\r\n          }\r\n        case ACTION_TYPES.SET_DB_PROFILE:\r\n          return {\r\n            ...state,\r\n            db_profile: action.payload\r\n          }\r\n        case ACTION_TYPES.REMOVE_DB_PROFILE:\r\n          return {\r\n            ...state,\r\n            db_profile: null\r\n          }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\n\r\nexport const initialState = {\r\n  user_textChange: '',\r\n  user_textSubmit: ''\r\n}\r\n\r\n\r\nexport const FormReducer = (state, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.USER_INPUT_CHANGE:\r\n        return {\r\n          ...state,\r\n          user_textChange: action.payload\r\n        }\r\n      case ACTION_TYPES.USER_INPUT_SUBMIT:\r\n        return {\r\n          ...state,\r\n          user_textSubmit: action.payload\r\n        }\r\n      default:\r\n        throw new Error();\r\n    }\r\n}\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nexport const initialState = {\r\n  posts: null,\r\n\r\n}\r\n\r\nexport const PostsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.FETCH_DB_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_DB_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: []\r\n        }\r\n    \r\n      default:\r\n        return state\r\n    }\r\n}\r\n","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()\r\n","import React, { useEffect, useContext } from 'react';\r\nimport history from './history';\r\nimport Context from './context';\r\n\r\nimport axios from 'axios';\r\n\r\nconst AuthCheck = () => {\r\n  const context = useContext(Context)\r\n\r\n\r\n  useEffect(() => {\r\n    if(context.authObj.isAuthenticated()) {\r\n      const profile = context.authObj.userProfile\r\n      context.handleUserLogin()\r\n      context.handleUserAddProfile(profile)\r\n       axios.post('/api/posts/userprofiletodb', profile )\r\n        .then(axios.get('/api/get/userprofilefromdb', {params: {email: profile.profile.email}})\r\n          .then(res => context.handleAddDBProfile(res.data)) )\r\n        .then(history.replace('/') )\r\n    }\r\n    else {\r\n      context.handleUserLogout()\r\n      context.handleUserRemoveProfile()\r\n      context.handleUserRemoveProfile()\r\n      history.replace('/')\r\n      }\r\n    }, [context.authObj.userProfile, context])\r\n\r\n    return(\r\n        <div>\r\n        </div>\r\n    )}\r\n\r\n\r\n\r\n\r\nexport default AuthCheck;\r\n","import React from 'react';\r\n\r\n\r\nconst Home = props => (\r\n    <div>\r\n      Home\r\n      <br />\r\n\r\n      <br />\r\n      <br />\r\n    </div>\r\n);\r\n\r\nexport default Home;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Context from '../utils/context';\r\n\r\nconst Header = () => {\r\n  const context = useContext(Context)\r\n\r\n    return(\r\n        <div>\r\n          <Link to='/' style={{padding: '5px'}}>\r\n            Home\r\n          </Link>\r\n          <Link to='/profile' style={{padding: '5px'}}>\r\n            Profile\r\n          </Link>\r\n          <Link to='/hooksform' style={{padding: '5px'}}>\r\n            Hooks Form\r\n          </Link>\r\n          <Link to='/hookscontainer' style={{padding: '5px'}}>\r\n            Hooks Container\r\n          </Link>\r\n          <Link to='/privateroute' style={{padding: '5px'}}>\r\n            Private Route\r\n          </Link>\r\n          <Link to='/posts' style={{padding: '5px'}}>\r\n             Forum\r\n          </Link>\r\n          {!context.authState\r\n            ? <button onClick={() => context.authObj.login()}>Login</button>\r\n            : <button onClick={() => context.authObj.logout()}>Logout</button>\r\n          }\r\n        </div>\r\n  )};\r\n\r\nexport default Header;\r\n","import React, { useContext, useState, useEffect, useReducer } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport * as Reducer1 from '../store/reducers/plain_reducer';\r\nimport Context from '../utils/context';\r\n\r\n\r\nconst HooksContainer1 = () => {\r\n  const context = useContext(Context)\r\n\r\n  const [value, setValue] = useState(0)\r\n\r\n  const [useEffectValue, setUseEffectValue] = useState(null)\r\n\r\n  const [state, dispatch] = useReducer(Reducer1.Reducer1, Reducer1.initialState)\r\n\r\n  useEffect(() => {\r\n      setTimeout(() => setUseEffectValue(\"useEffect worked\"), 3000 );\r\n  }, [value])\r\n\r\n  const incrementValue = () => {\r\n    setValue(value + 1 )\r\n  }\r\n\r\n  const decrementValue = () => {\r\n    setValue(value - 1 )\r\n  }\r\n\r\n  const handleuseEffectValue = () => {\r\n    setUseEffectValue(\"some string\")\r\n  }\r\n\r\n  const handleDispatchTrue = () => {\r\n    //    dispatch(type: \"SUCCESS\")\r\n    //    dispatch(ACTIONS.SUCCESS)\r\n    dispatch(ACTIONS.success())\r\n  }\r\n\r\n  const handleDispatchFalse = () => {\r\n    //     dispatch(type: \"FAILURE\")\r\n    //    dispatch(ACTIONS.FAILURE)\r\n    dispatch(ACTIONS.failure())\r\n  }\r\n\r\n  const handleContextDispatchTrue = () => {\r\n    context.dispatchContextTrue()\r\n  }\r\n\r\n  const handleContextDispatchFalse = () => {\r\n    context.dispatchContextFalse()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n      <button onClick={() => handleuseEffectValue()}> Handle Value  </button>\r\n      <button onClick={() => handleDispatchTrue()}>Dispatch True </button>\r\n      <button onClick={() => handleDispatchFalse()}>Dispatch False </button>\r\n      <button onClick={() => handleContextDispatchTrue()}>Dispatch Context True </button>\r\n      <button onClick={() => handleContextDispatchFalse()}>Dispatch Context False </button>\r\n      <button onClick={() => incrementValue()}> Add Local Value </button>\r\n      <button onClick={() => decrementValue()}> Dec Local Value </button>\r\n      <br />\r\n      <br />\r\n      {context.useContextSubmitState\r\n        ? <h3> {context.useContextSubmitState} </h3>\r\n        : <h3> No User Text </h3>\r\n      }\r\n      <br />\r\n      {state.stateprop1\r\n        ? <p> Local stateprop1 is true </p>\r\n        : <p> Local stateprop1 is false </p>\r\n      }\r\n      <br />\r\n      {context.stateProp1\r\n        ? <p> Global Context stateprop1 is true </p>\r\n        : <p> Global Context stateprop1 is false </p>\r\n      }\r\n      <br />\r\n      {useEffectValue\r\n        ? <p> { useEffectValue }</p>\r\n        : <p> No value </p>\r\n      }\r\n      <br />\r\n      <p>Local Value: {value}</p>\r\n      <br />\r\n      <br />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default HooksContainer1;\r\n","import React from 'react'\r\n\r\nconst Callback = props => (\r\n    <div>\r\n      Callback\r\n    </div>\r\n);\r\n\r\nexport default Callback;\r\n","import React, { useContext, useState, useReducer } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport * as FormReducer from '../store/reducers/form_reducer';\r\nimport Context from '../utils/context';\r\n\r\n\r\nconst HooksForm1 = () => {\r\n  const context = useContext(Context)\r\n\r\n  const [valueChange, setValueChange] = useState('')\r\n  const [valueSubmit, setValueSubmit] = useState('')\r\n\r\n  const [state, dispatch] = useReducer(FormReducer.FormReducer,\r\n                                       FormReducer.initialState)\r\n\r\n\r\n  const handleuseStateChange = (event) => (\r\n    setValueChange(event.target.value)\r\n  );\r\n\r\n  const handleuseStateSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValueSubmit(event.target.useState.value)\r\n  };\r\n\r\n  const handleuseReducerChange = (event) => (\r\n    dispatch(ACTIONS.user_input_change(event.target.value))\r\n  );\r\n\r\n  const handleuseReducerSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(ACTIONS.user_input_submit(event.target.useReducer.value))\r\n  };\r\n\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={handleuseStateSubmit}>\r\n          <label> React useState: </label>\r\n          <input id=\"useState\" onChange={handleuseStateChange} type=\"text\" />\r\n          <button type=\"submit\"> Submit </button>\r\n        </form>\r\n        <br />\r\n        <form onSubmit={handleuseReducerSubmit}>\r\n          <label> React useReducer: </label>\r\n          <input id=\"useReducer\" onChange={handleuseReducerChange} type=\"text\" />\r\n          <button type=\"submit\"> Submit </button>\r\n        </form>\r\n        <br />\r\n        <form onSubmit={context.useContextSubmit}>\r\n          <label> React useContext: </label>\r\n          <input id=\"useContext\" onChange={context.useContextChange} type=\"text\" />\r\n          <button type=\"submit\"> Submit </button>\r\n        </form>\r\n        <br />\r\n\r\n        <h3>React useState:</h3>\r\n        <p>Change: {valueChange}</p>\r\n        <p>Submit: {valueSubmit}</p>\r\n        <br />\r\n        {context.prop4}\r\n        <h3>React useReducer:</h3>\r\n        <p>Change: {state.user_textChange}</p>\r\n        <p>Submit: {state.user_textSubmit}</p>\r\n        <br />\r\n        <h3>React useContext:</h3>\r\n        <p>Change: {context.useContextChangeState}</p>\r\n        <p>Submit: {context.useContextSubmitState}</p>\r\n        <br />\r\n        <br />\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HooksForm1;\r\n","import React from 'react'\r\n\r\nconst PrivateComponent = props => (\r\n    <div>\r\n      Private Component\r\n    </div>\r\n);\r\n\r\nexport default PrivateComponent;\r\n","import React, { useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Context from '../utils/context';\r\n\r\n\r\nconst SignUp = (props) => {\r\n  const context = useContext(Context)\r\n  return (\r\n    <div className=\"FlexRowMain\">\r\n    <div>\r\n    <h1>Signup and Create an Account</h1>\r\n      <Button color=\"primary\"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              onClick={() => context.authObj.login()}>\r\n        Signup\r\n      </Button>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default (SignUp);\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport Context from '../utils/context';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport history from '../utils/history';\r\nimport axios from 'axios';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Profile = () => {\r\n  const context = useContext(Context)\r\n\r\n  const [stateLocal, setState] = useState({ open: false,\r\n                                            post_id: null,\r\n                                            posts: []\r\n                                          })\r\n\r\n  useEffect(() => {\r\n    const user_id = context.dbProfileState[0].uid\r\n    axios.get('/api/get/userposts', {params: { user_id: user_id}})\r\n      .then((res) => setState({...stateLocal, posts: [...res.data] }))\r\n      .catch((err) => console.log(err))\r\n  })\r\n\r\n  const handleClickOpen = (pid) => {\r\n    setState({open: true, post_id: pid })\r\n  }\r\n\r\n  const handleClickClose = () => {\r\n    setState({open: false, post_id: null })\r\n  }\r\n\r\n  const DeletePost = () => {\r\n    const post_id = stateLocal.post_id\r\n    axios.delete('api/delete/postcomments', {data: { post_id: post_id }} )\r\n      .then(() => axios.delete('/api/delete/post', {data: { post_id: post_id }} )\r\n          .then(res => console.log(res) ) )\r\n      .catch(err => console.log(err))\r\n      .then(() => handleClickClose())\r\n      .then(() => setTimeout(() => history.replace('/'), 700 ) )\r\n  }\r\n\r\n  const RenderProfile = (props) => {\r\n    return(\r\n      <div>\r\n        <h1>{props.profile.profile.nickname}</h1>\r\n        <br />\r\n        <img src={props.profile.profile.picture} alt=\"\" />\r\n        <br />\r\n        <h4> {props.profile.profile.email}</h4>\r\n        <br />\r\n        <h5> {props.profile.profile.name} </h5>\r\n        <br />\r\n        <h6> Email Verified: </h6>\r\n        {props.profile.profile.email_verified ? <p>Yes</p> : <p>No</p> }\r\n        <br />\r\n      </div>\r\n\r\n     )\r\n   }\r\n\r\n  const RenderPosts = post => (\r\n    <Card style={{width: '500px', height: '200px', marginBottom: '10px', paddingBottom: '80px' }}>\r\n      <CardHeader\r\n        title={<Link to={{pathname:'/post/' + post.post.pid, state: {post}}}>\r\n                  {post.post.title}\r\n                </Link> }\r\n        subheader={\r\n            <div className=\"FlexColumn\">\r\n              <div className=\"FlexRow\">\r\n                {post.post.date_created}\r\n              </div>\r\n              <div className=\"FlexRow\">\r\n                <Link to={{pathname:'/editpost/' + post.post.pid, state:{post} }}>\r\n                  <button>\r\n                   Edit\r\n                  </button>\r\n                </Link>\r\n                <button onClick={() => handleClickOpen(post.post.pid) }>\r\n                 Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            }\r\n          />\r\n      <br />\r\n      <CardContent>\r\n        <span style={{overflow: 'hidden' }}> {post.post.body} </span>\r\n      </CardContent>\r\n\r\n    </Card>\r\n  );\r\n\r\n\r\n      return(\r\n          <div>\r\n            <div>\r\n            <Link to={{pathname:\"/showmessages/\" + context.dbProfileState[0].uid }}>\r\n             <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n               Show Messages\r\n              </Button>\r\n            </Link>\r\n            <RenderProfile profile={context.profileState} />\r\n            </div>\r\n            <div>\r\n              {stateLocal.posts\r\n                ? stateLocal.posts.map(post =>\r\n                  <RenderPosts post={post} key={post.pid} /> )\r\n                : null }\r\n            </div>\r\n            <Dialog\r\n              open={stateLocal.open}\r\n              onClose={handleClickClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\"> Confirm Delete? </DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText\r\n                    id=\"alert-dialog-description\"\r\n                    >\r\n                      Deleteing Post\r\n                    </DialogContentText>\r\n                    <DialogActions>\r\n                      <Button onClick={() => DeletePost() }>\r\n                        Agree\r\n                      </Button>\r\n                      <Button onClick={() => handleClickClose()}>\r\n                        Cancel\r\n                      </Button>\r\n                  </DialogActions>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n          </div>\r\n  )}\r\n\r\n\r\n\r\nexport default (Profile);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst ShowUser = (props) => {\r\n\r\n  const [profile, setProfile ] = useState({})\r\n  const [userPosts, setPosts ] = useState([])\r\n\r\n  useEffect(() => {\r\n    const username = props.location.state.post.post.author\r\n    axios.get('/api/get/otheruserprofilefromdb', {params: {username: username}} )\r\n      .then(res =>  setProfile({...res.data} ))\r\n      .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n     axios.get('/api/get/otheruserposts', {params: {username: username}} )\r\n       .then(res =>  setPosts([...res.data]))\r\n       .catch(function (error) {\r\n           console.log(error);\r\n         })\r\n      window.scrollTo({top: 0, left: 0})\r\n    }, [props.location.state.post.post.author] )\r\n\r\n\r\n  const RenderProfile = (props) => (\r\n    <div>\r\n      <div className=\"FlexRow\">\r\n         <h1>\r\n            {props.profile.username}\r\n         </h1>\r\n         </div>\r\n         <div className=\"FlexRow\">\r\n         <Link to={{pathname:\"/sendmessage/\", state:{props} }}>\r\n             <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Send Message\r\n             </Button>\r\n          </Link>\r\n        </div>\r\n    </div>\r\n    );\r\n\r\n\r\n  const RenderPosts = (post) => (\r\n    <div>\r\n     <Card className=\"CardStyles\">\r\n        <CardHeader\r\n          title={<Link to={{pathname:\"/post/\" + post.post.pid, state: {post} }}>\r\n                { post.post.title }\r\n                </Link>}\r\n          subheader={\r\n                    <div>\r\n                      <div >\r\n                      {  moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a') }\r\n                      </div>\r\n                      <div >{post.post.author}</div>\r\n                    </div> }\r\n        />\r\n        <CardContent>\r\n            <span style={{ overflow: 'hidden'}}>{ post.post.body } </span>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n\r\n\r\n   return (\r\n     <div>\r\n     <div className=\"FlexRow\">\r\n        {profile\r\n          ? <RenderProfile profile={profile} />\r\n          : null\r\n         }\r\n     </div>\r\n\r\n    <br />\r\n    <hr className=\"style-two\" />\r\n\r\n     <h3> Latest Activity: </h3>\r\n       <div className=\"FlexColumn\">\r\n       { userPosts ?\r\n          userPosts.map(post =>\r\n          <div key={ post.pid }>\r\n             <RenderPosts  post={post} />\r\n             <br />\r\n          </div>\r\n           )\r\n       : null\r\n       }\r\n       </div>\r\n     </div>\r\n  )\r\n}\r\n\r\n\r\nexport default (ShowUser);\r\n","import React, { useContext } from 'react';\r\nimport Context from '../utils/context';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\n\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst SendMessage = (props) => {\r\n  const context = useContext(Context)\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const message_to_username = props.location.state.props.profile[0].username\r\n    const message_from_username = context.dbProfileState[0].username\r\n    const message_title = event.target.title.value\r\n    const message_body = event.target.body.value\r\n\r\n    const data = {message_sender: message_from_username,\r\n                  message_to: message_to_username,\r\n                  title: message_title,\r\n                  body: message_body }\r\n    console.log(props)\r\n    axios.post('/api/post/messagetodb', data)\r\n      .then(response => console.log(response))\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then(setTimeout( function() { history.replace('/') }, 700))\r\n\r\n     }\r\n\r\n\r\n    return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          margin=\"normal\"\r\n        />\r\n        <br/>\r\n          <TextField\r\n          id=\"body\"\r\n          multiline\r\n          rows=\"4\"\r\n          margin=\"normal\"\r\n        />\r\n        <br/>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" >Submit</Button>\r\n      </form>\r\n      <br />\r\n       <span>\r\n        <button className=\"CancelButton\" onClick={() => history.replace('/')}> Cancel </button>\r\n       </span>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default (SendMessage);\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport Context from '../utils/context';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nconst ShowMessages = (props) => {\r\n  const context = useContext(Context)\r\n\r\n  const [messages, setMessages] = useState([])\r\n\r\n  useEffect(() => {\r\n    const username = context.dbProfileState[0].username\r\n    axios.get('/api/get/usermessages', {params: {username: username}})\r\n      .then(res =>  setMessages([...res.data]))\r\n      .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n   }, [] )  //eslint-disable-line\r\n\r\n   const RenderMessages = (props) => (\r\n     <TableRow>\r\n         <TableCell>\r\n           <p> <strong>From: </strong>  {props.message.message_sender} </p>\r\n           <p> <strong>Title </strong>   { props.message.message_title } </p>\r\n           <p><strong> Message:</strong>  { props.message.message_body } </p>\r\n           <small> { props.message.date_created } </small>\r\n           <br />\r\n           <Link to={{pathname:\"/replytomessage\", state:{props} }}>\r\n               <button>\r\n                  Reply\r\n               </button>\r\n            </Link>\r\n           <button onClick={() => DeleteMessage(props.message.mid)}> Delete </button>\r\n           <br />\r\n           <br />\r\n           <button onClick={() => history.goBack()}> Cancel </button>\r\n        </TableCell>\r\n       </TableRow>\r\n   )\r\n\r\n  const DeleteMessage = (mid) => {\r\n    axios.delete('/api/delete/usermessage', { data: { mid: mid }})\r\n    .then(res => console.log(res))\r\n    .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n     .then(() => setTimeout( function() { history.replace('/') }, 700))\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className='FlexRow'>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell> <strong> Messages </strong> </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          { messages\r\n            ? messages.map( message =>\r\n              <RenderMessages key={message.mid} message={message} />\r\n            )\r\n            : null\r\n          }\r\n         </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default (ShowMessages);\r\n","import React, { useContext } from 'react';\r\nimport Context from '../utils/context';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst ReplytoMessage = (props) => {\r\n  const context = useContext(Context)\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const message_to_username = props.location.state.props.message.message_sender\r\n    const message_from_username = context.dbProfileState[0].username\r\n    const message_title = event.target.title.value\r\n    const message_body = event.target.body.value\r\n\r\n    const data = {message_sender: message_from_username,\r\n                  message_to: message_to_username,\r\n                  title: message_title,\r\n                  body: message_body }\r\n    axios.post('/api/post/messagetodb', data)\r\n      .then(response => console.log(response))\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then(setTimeout( function() { history.replace('/') }, 700))\r\n     }\r\n\r\n    return (\r\n      <div>\r\n      <h2> Message: </h2>\r\n      <div className='FlexColumn'>\r\n        <div>\r\n          <p><strong>{props.location.state.props.message.message_title}</strong></p>\r\n        </div>\r\n        <div>\r\n          <p>{props.location.state.props.message.message_body}</p>\r\n        </div>\r\n        <div>\r\n          <small> By: {props.location.state.props.message.message_sender}</small>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"FlexRow\">\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            margin=\"normal\"\r\n          />\r\n          <br/>\r\n            <TextField\r\n            id=\"body\"\r\n            multiline\r\n            rows=\"4\"\r\n            margin=\"normal\"\r\n          />\r\n          <br/>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" >Submit</Button>\r\n        </form>\r\n          <br />\r\n        </div>\r\n        <div className=\"FlexRow\">\r\n          <button className=\"CancelButton\" onClick={() => history.replace('/')}> Cancel </button>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default (ReplytoMessage);\r\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport axios from 'axios';\nimport moment from 'moment';\nimport Context from '../utils/context';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\n\nimport '../App.css';\nimport '../styles/pagination.css';\n\n\n\n\nconst Posts = (props) => {\nconst context = useContext(Context)\n\n\nconst [stateLocal, setState] = useState({ posts: [],\n                                          fetched: false,\n                                          first_page_load: false,\n                                          pages_slice: [1, 2, 3, 4, 5],\n                                          max_page: null,\n                                          items_per_page: 3,\n\n                                          currentPage: 1,\n                                          num_posts: null,\n                                          posts_slice: null,\n                                          posts_search: [],\n                                          posts_per_page: 3\n                                      })\n\n\n  useEffect(() => {\n   if(!context.postsState) {\n      axios.get('/api/get/allposts')\n        .then(res => context.handleAddPosts(res.data) )\n        .catch((err) => console.log(err))\n      }\n    if (context.postsState && !stateLocal.fetched) {\n      const indexOfLastPost = 1 * stateLocal.posts_per_page\n      const indexOfFirstPost = indexOfLastPost - stateLocal.posts_per_page\n      const last_page = Math.ceil(context.postsState.length/stateLocal.posts_per_page)\n\n      setState({...stateLocal,\n                fetched: true,\n                posts: [...context.postsState],\n                num_posts: context.postsState.length,\n                max_page: last_page,\n                posts_slice: context.postsState.slice(indexOfFirstPost,\n                                                      indexOfLastPost)\n                })\n      }\n    }, [context, stateLocal])\n\n\n  useEffect(() => {\n    let page = stateLocal.currentPage\n    let indexOfLastPost = page * 3;\n    let indexOfFirstPost = indexOfLastPost - 3;\n\n    setState({...stateLocal,\n              posts_slice: stateLocal.posts.slice(indexOfFirstPost,\n                                                  indexOfLastPost) })\n  }, [stateLocal.currentPage]) //eslint-disable-line\n\n\n\n\n const add_search_posts_to_state = (posts) => {\n    setState({...stateLocal, posts_search: []});\n    setState({...stateLocal, posts_search: [...posts]});\n }\n\n\nconst handleSearch = (event) => {\n   setState({...stateLocal, posts_search: []});\n   const search_query = event.target.value\n   axios.get('/api/get/searchpost', {params: {search_query: search_query} })\n     .then(res => res.data.length !== 0\n                    ? add_search_posts_to_state(res.data)\n                    : null )\n     .catch(function (error) {\n       console.log(error);\n       })\n   }\n\n\n\nconst RenderPosts = post => (\n  <div >\n  <Card >\n    <CardHeader\n      title={<Link to={{pathname:'/post/' + post.post.pid, state: {post}}}>\n                {post.post.title}\n              </Link> }\n      subheader={\n          <div className=\"FlexColumn\">\n            <div className=\"FlexRow\">\n            {  moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a') }\n            </div>\n            <div className=\"FlexRow\">\n              By:\n              <Link style={{paddingLeft: '5px', textDecoration: 'none'}}\n                    to={{pathname:\"/user/\" + post.post.author, state:{post} }}>\n               { post.post.author }\n               </Link>\n             </div>\n             <div className=\"FlexRow\">\n              <i className=\"material-icons\">thumb_up</i>\n              <div className=\"notification-num-allposts\"> {post.post.likes} </div>\n            </div>\n          </div>\n          }\n        />\n    <br />\n    <CardContent>\n      <span style={{overflow: 'hidden' }}> {post.post.body} </span>\n    </CardContent>\n  </Card>\n  </div>\n)\n\nconst page_change = (page) => {\n  window.scrollTo({top:0, left: 0, behavior: 'smooth'})\n\n  //variables for page change\n  let next_page = page + 1\n  let prev_page = page - 1\n\n  //handles general page change\n  //if(state.max_page < 5 return null)\n  if(page > 2 && page < stateLocal.max_page - 1) {\n    setState({...stateLocal,\n              currentPage: page,\n              pages_slice: [prev_page - 1,\n                            prev_page,\n                            page,\n                            next_page,\n                            next_page + 1],\n            })\n   }\n   if(page === 2 ) {\n     setState({...stateLocal,\n              currentPage: page,\n               pages_slice: [prev_page,\n                             page,\n                             next_page,\n                             next_page + 1,\n                             next_page + 2],\n             })\n    }\n   //handles use case for user to go back to first page from another page\n   if(page === 1) {\n     setState({...stateLocal,\n              currentPage: page,\n               pages_slice: [page,\n                             next_page,\n                             next_page + 1,\n                             next_page + 2,\n                             next_page + 3],\n          })\n   }\n   //handles last page change\n   if(page === stateLocal.max_page) {\n     setState({...stateLocal,\n               currentPage: page,\n               pages_slice: [prev_page - 3,\n                             prev_page - 2,\n                             prev_page - 1,\n                             prev_page,\n                             page],\n             })\n   }\n   if(page === stateLocal.max_page - 1) {\n     setState({...stateLocal,\n               currentPage: page,\n               pages_slice: [prev_page - 2,\n                             prev_page - 1,\n                             prev_page,\n                             page,\n                             next_page],\n             })\n   }\n }\n\n\n\nreturn(\n    <div>\n    <div style={{opacity: stateLocal.opacity, transition: 'opacity 2s ease'}}>\n    <br />\n    { context.authState\n      ?  <Link to=\"/addpost\">\n            <Button variant=\"contained\" color=\"primary\">\n              Add Post\n            </Button>\n          </Link>\n      : <Link to=\"/signup\">\n            <Button variant=\"contained\" color=\"primary\">\n              Sign Up to Add Post\n            </Button>\n          </Link>\n        }\n    </div>\n    <br />\n    <TextField\n      id=\"search\"\n      label=\"Search\"\n      margin=\"normal\"\n      onChange={handleSearch}\n    />\n    <hr />\n     <button onClick={() => console.log(stateLocal)}> Button </button>\n     <button onClick={() => console.log(context)}> Button </button>\n     <br />\n     <div>\n       {stateLocal.posts_search\n         ? stateLocal.posts_search.map(post =>\n           <RenderPosts key={post.pid + 1000} post={post} />\n          )\n          : null\n        }\n      </div>\n\n    <h1>Posts</h1>\n      <div>\n        {stateLocal.posts_slice\n          ? stateLocal.posts_slice.map(post =>\n            <RenderPosts key={post.pid} post={post} />\n           )\n          : null\n         }\n      </div>\n      <div>\n          <div className=\"FlexRow\">\n              <button onClick={() => page_change(1) }> First </button>\n              <button onClick={() => page_change(stateLocal.currentPage - 1) }> Prev </button>\n                 {stateLocal.pages_slice.map((page) =>\n                     <div\n                       onClick={() => page_change(page)}\n                       className={stateLocal.currentPage === page\n                                     ? \"pagination-active\"\n                                     : \"pagination-item\" }\n                       key={page}>\n                         {page}\n                      </div>\n                 )}\n               <button onClick={() => page_change(stateLocal.currentPage + 1)}> Next </button>\n               <button onClick={() => page_change(stateLocal.max_page)}> Last </button>\n             </div>\n       </div>\n    </div>\n)}\n\n\nexport default Posts;\n","import React, { useContext} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport history from '../utils/history';\r\nimport Context from '../utils/context';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nconst AddPost = () => {\r\n  const context = useContext(Context)\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const user_id = context.dbProfileState[0].uid\r\n    const username = context.dbProfileState[0].username\r\n    const data = {title: event.target.title.value,\r\n                  body: event.target.body.value,\r\n                  username: username,\r\n                  uid: user_id}\r\n\r\n    axios.post('/api/post/posttodb', data)\r\n      .then(response => console.log(response))\r\n      .catch((err) => console.log(err))\r\n      .then(setTimeout(() => history.replace('/'), 700) )\r\n  }\r\n\r\n\r\n    return(\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            id='title'\r\n            label='Title'\r\n            margin='normal'\r\n            />\r\n          <br />\r\n          <TextField\r\n            id='body'\r\n            label='Body'\r\n            multiline\r\n            rowsMax='4'\r\n            margin=\"normal\"\r\n            />\r\n           <br />\r\n           <button type='submit'> Submit </button>\r\n           </form>\r\n        <br />\r\n        <button onClick={() => history.replace('/posts')}> Cancel </button>\r\n      </div>\r\n  )}\r\n\r\n\r\n\r\nexport default AddPost;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\nimport Context from '../utils/context';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\nconst ShowPost = (props) => {\r\n  const context = useContext(Context)\r\n\r\n  const [stateLocal, setState] = useState({ comment: '',\r\n                                            fetched: false,\r\n                                            cid: 0,\r\n                                            delete_comment_id: 0,\r\n                                            edit_comment_id: 0,\r\n                                            edit_comment: '',\r\n                                            comments_arr: null,\r\n                                            cur_user_id: null,\r\n                                            like_post: true,\r\n                                            likes: 0,\r\n                                            like_user_ids: [],\r\n                                            post_title: null,\r\n                                            post_body: null,\r\n                                            post_author: null,\r\n                                            post_id: null\r\n                                           })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      if(props.location.state && !stateLocal.fetched) {\r\n        console.log('tttt')\r\n        setState({...stateLocal,\r\n                  fetched: true,\r\n                  likes: props.location.state.post.post.likes,\r\n                  like_user_ids: props.location.state.post.post.like_user_id,\r\n                  post_title: props.location.state.post.post.title,\r\n                  post_body: props.location.state.post.post.body,\r\n                  post_author: props.location.state.post.post.author,\r\n                  post_id: props.location.state.post.post.pid})\r\n        }\r\n      }, [stateLocal,\r\n          props.location])\r\n\r\n  useEffect( () => {\r\n    if(!props.location.state && !stateLocal.fetched) {\r\n      console.log('yyyy')\r\n      const post_id = props.location.pathname.substring(6)\r\n\r\n      axios.get('/api/get/post',\r\n                  {params: {post_id: post_id}} )\r\n        .then(res => res.data.length !== 0\r\n                ?   setState({...stateLocal,\r\n                        fetched: true,\r\n                        likes: res.data[0].likes,\r\n                        like_user_ids: res.data[0].like_user_id,\r\n                        post_title: res.data[0].title,\r\n                        post_body: res.data[0].body,\r\n                        post_author: res.data[0].author,\r\n                        post_id: res.data[0].pid\r\n                      })\r\n                 : null\r\n              )\r\n        .catch((err) => console.log(err) )\r\n    }\r\n  }, [stateLocal,\r\n      props.location])\r\n\r\n   useEffect(() => {\r\n     if(!stateLocal.comments_arr) {\r\n       if(props.location.state) {\r\n         const post_id = props.location.pathname.substring(6)\r\n         axios.get('/api/get/allpostcomments',\r\n                     {params: {post_id: post_id}} )\r\n           .then(res => res.data.length !== 0\r\n                          ? setState({...stateLocal, comments_arr: [...res.data]})\r\n                          : null )\r\n           .catch((err) => console.log(err))\r\n       } \r\n     }\r\n   }, [props.location, stateLocal])\r\n\r\n\r\n    const handleCommentSubmit = (submitted_comment) => {\r\n        if(stateLocal.comments_arr) {\r\n            setState({...stateLocal, comments_arr: [submitted_comment,\r\n                                                  ...stateLocal.comments_arr]})\r\n         } else {\r\n           setState({...stateLocal, comments_arr: [submitted_comment]})\r\n         }\r\n     };\r\n\r\n     const handleCommentUpdate = (comment) => {\r\n       const commentIndex = stateLocal.comments_arr.findIndex(com => com.cid === comment.cid)\r\n       var newArr = [...stateLocal.comments_arr ]\r\n       newArr[commentIndex] = comment\r\n\r\n       setTimeout(() => setState({...stateLocal, comments_arr: [...newArr], edit_comment_id: 0 }), 100)\r\n     };\r\n\r\n\r\n     const handleCommentDelete = (cid) => {\r\n       setState({...stateLocal, delete_comment_id: cid})\r\n       const newArr = stateLocal.comments_arr.filter(com => com.cid !== cid)\r\n       setState({...stateLocal, comments_arr: newArr})\r\n     };\r\n\r\n     const handleEditFormClose = () => {\r\n       setState({...stateLocal, edit_comment_id: 0})\r\n     }\r\n\r\n\r\n    const RenderComments = (props) => {\r\n      return(\r\n      <div className={stateLocal.delete_comment_id === props.comment.cid\r\n                        ? \"FadeOutComment\"\r\n                        : \"CommentStyles\"}>\r\n        <div>\r\n        <p>{props.comment.comment} </p>\r\n        <small>\r\n          { props.comment.date_created === 'Just Now'\r\n            ?  <div> {props.comment.isEdited\r\n                  ? <span> Edited </span>\r\n                  : <span> Just Now </span> }</div>\r\n            :  props.comment.date_created\r\n          }\r\n        </small>\r\n        <p> By: { props.comment.author} </p>\r\n        </div>\r\n        <div>\r\n        {props.cur_user_id === props.comment.user_id\r\n          ? !props.isEditing\r\n            ?  <div>\r\n                  <Button onClick={() => setState({...stateLocal,\r\n                                                  edit_comment_id: props.comment.cid,\r\n                                                  edit_comment: props.comment.comment\r\n                                                  })\r\n                                     }>\r\n                     Edit\r\n                   </Button>\r\n                </div>\r\n            :   <form onSubmit={(event, cid) => handleUpdate(event, props.comment.cid) }>\r\n                  <input\r\n                    autoFocus={true}\r\n                    name=\"edit_comment\"\r\n                    id=\"editted_comment\"\r\n                    label=\"Comment\"\r\n                    value={stateLocal.edit_comment}\r\n                    onChange={handleEditCommentChange}\r\n                  />\r\n                    <br />\r\n                    <Button type='submit'>\r\n                       Agree\r\n                    </Button>\r\n                    <Button type=\"button\" onClick={handleEditFormClose}>\r\n                     Cancel\r\n                    </Button>\r\n                    <button onClick={() => handleDeleteComment(props.comment.cid)}>\r\n                      Delete\r\n                    </button>\r\n                  </form>\r\n            : null }\r\n          </div>\r\n      </div>\r\n    );\r\n   }\r\n\r\n\r\n\r\n    const handleEditCommentChange = (event) => (\r\n      setState({...stateLocal,\r\n                edit_comment: event.target.value})\r\n    );\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      setState({...stateLocal, comment: ''})\r\n\r\n      const comment = event.target.comment.value\r\n      const user_id = context.dbProfileState[0].uid\r\n      const username = context.dbProfileState[0].username\r\n      const post_id = stateLocal.post_id\r\n      const current_time = \"Just Now\"\r\n      const temp_cid = Math.floor(Math.random() * 1000);\r\n\r\n      const submitted_comment = {cid: temp_cid,\r\n                                 comment: comment,\r\n                                 user_id: user_id,\r\n                                 author: username,\r\n                                 date_created: current_time }\r\n\r\n      const data = {comment: event.target.comment.value,\r\n                    post_id: post_id,\r\n                    user_id: user_id,\r\n                    username: username}\r\n\r\n      axios.post('/api/post/commenttodb', data)\r\n        .then(res => console.log(res))\r\n        .catch((err) => console.log(err))\r\n      window.scroll({top: 0, left: 0, behavior: 'smooth'})\r\n      handleCommentSubmit(submitted_comment)\r\n    }\r\n\r\n    const handleUpdate = (event, cid) => {\r\n      event.preventDefault()\r\n      console.log(event)\r\n      console.log(cid)\r\n      const comment = event.target.editted_comment.value\r\n      const comment_id = cid\r\n      const post_id = stateLocal.post_id\r\n      const user_id = context.dbProfileState[0].uid\r\n      const username = context.dbProfileState[0].username\r\n      const isEdited = true\r\n      const current_time = \"Just Now\"\r\n\r\n      const edited_comment = {cid: comment_id,\r\n                              comment: comment,\r\n                              user_id: user_id,\r\n                              author: username,\r\n                              date_created: current_time,\r\n                              isEdited: isEdited }\r\n\r\n      const data = {cid: comment_id,\r\n                    comment: comment,\r\n                    post_id: post_id,\r\n                    user_id: user_id,\r\n                    username: username}\r\n\r\n      axios.put('/api/put/commenttodb', data)\r\n        .then(res => console.log(res))\r\n        .catch((err) => console.log(err))\r\n      handleCommentUpdate(edited_comment);\r\n    }\r\n\r\n    const handleDeleteComment = (cid) => {\r\n      const comment_id = cid\r\n      console.log(cid)\r\n      axios.delete('/api/delete/comment', {data: {comment_id: comment_id}} )\r\n        .then(res => console.log(res))\r\n        .catch((err) => console.log(err))\r\n      handleCommentDelete(cid)\r\n    }\r\n\r\n    const handleLikes = () => {\r\n        const user_id = context.dbProfileState[0].uid\r\n        const post_id = stateLocal.post_id\r\n\r\n        const data = { uid: user_id, post_id: post_id }\r\n        console.log(data)\r\n        if(!stateLocal.like_user_ids.includes(user_id)) {\r\n        \taxios.put('/api/put/likes', data)\r\n          \t\t.then( !stateLocal.like_user_ids.includes(user_id)\r\n          \t\t\t\t\t&& stateLocal.like_post\r\n                    ? setState({...stateLocal,\r\n                                likes: stateLocal.likes + 1,\r\n                                like_post: false})\r\n                    : null )\r\n          \t\t.catch(err => console.log(err))\r\n      };\r\n     }\r\n\r\n\r\n    return(\r\n        <div>\r\n          <div>\r\n            <h2>Post</h2>\r\n            {stateLocal.comments_arr || props.location.state\r\n              ? <div>\r\n                  <p>{stateLocal.post_title}</p>\r\n                  <p>{stateLocal.post_body}</p>\r\n                  <p>{stateLocal.post_author}</p>\r\n                </div>\r\n            : null\r\n           }\r\n\r\n              <div style={{cursor: 'pointer'}} onClick={context.authState\r\n                                                        ? () => handleLikes()\r\n                                                        : () => history.replace('/signup')}>\r\n                  <i className=\"material-icons\">thumb_up</i>\r\n                  <small className=\"notification-num-showpost\">\r\n                    {stateLocal.likes}\r\n                  </small>\r\n                </div>\r\n          </div>\r\n          <div>\r\n\r\n            <h2> Comments:</h2>\r\n            {stateLocal.comments_arr\r\n              ? stateLocal.comments_arr.map((comment) =>\r\n                 <RenderComments comment={comment}\r\n                                 cur_user_id={context.dbProfileState\r\n                                                ? context.dbProfileState[0].uid\r\n                                                : null  }\r\n                                 key={comment.cid}\r\n                                 isEditing={comment.cid === stateLocal.edit_comment_id\r\n                                              ? true\r\n                                              : false }\r\n                       />)\r\n              : null\r\n            }\r\n          </div>\r\n          <div>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                id=\"comment\"\r\n                label=\"Comment\"\r\n                margin=\"normal\"\r\n              />\r\n              <br />\r\n              <div>\r\n                {console.log('hhhhh')}\r\n              </div>\r\n              {context.authState\r\n                ? <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                : <Link to=\"/signup\">\r\n                     <Button  variant=\"contained\" color=\"primary\">\r\n                         Signup to Comment\r\n                      </Button>\r\n                   </Link>\r\n               }\r\n            </form>\r\n          </div>\r\n          <div>\r\n          </div>\r\n        </div>\r\n    )}\r\n\r\n\r\n\r\n\r\nexport default ShowPost;\r\n\r\n","import React, { useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\nimport Context from '../utils/context';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n\r\n\r\nconst EditPost = (props) => {\r\n  const context = useContext(Context)\r\n\r\n  const [stateLocal, setState] = useState({ title: props.location.state.post.post.title,\r\n                                            body: props.location.state.post.post.body\r\n                                          })\r\n\r\n\r\n  const handleTitleChange = (event) => {\r\n    setState({...stateLocal, title: event.target.value })\r\n  }\r\n\r\n  const handleBodyChange = (event) => {\r\n    setState({...stateLocal, body: event.target.value })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const user_id = context.dbProfileState[0].uid\r\n    const username = context.dbProfileState[0].username\r\n    const pid = props.location.state.post.post.pid\r\n    const title = event.target.title.value\r\n    const body = event.target.body.value\r\n\r\n    const data = {title: title,\r\n                  body: body,\r\n                  pid: pid,\r\n                  uid: user_id,\r\n                  username: username\r\n                 }\r\n    axios.put(\"/api/put/post\", data)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n      .then(setTimeout(() => history.replace('/profile'), 700 ))\r\n  }\r\n\r\n\r\n    return(\r\n        <div>\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              id='title'\r\n              label='title'\r\n              margin=\"normal\"\r\n              value={stateLocal.title}\r\n              onChange={handleTitleChange}\r\n            />\r\n            <br />\r\n            <TextField\r\n              id='body'\r\n              label='body'\r\n              multiline\r\n              rows=\"4\"\r\n              margin='normal'\r\n              value={stateLocal.body}\r\n              onChange={handleBodyChange}\r\n              />\r\n          <br />\r\n          <button type=\"submit\"> Submit </button>\r\n          </form>\r\n          <br />\r\n          <Button onClick={() => history.goBack()}> Cancel </Button>\r\n        </div>\r\n    )}\r\n\r\n\r\n\r\nexport default EditPost;\r\n","import React, { useContext } from 'react';\r\nimport { Router, Route, Switch, Redirect } from 'react-router';\r\nimport history from './utils/history';\r\n\r\nimport Context from './utils/context';\r\nimport AuthCheck from './utils/authcheck';\r\n\r\nimport Home from './hooks/home';\r\nimport Header from './hooks/header';\r\nimport HooksContainer1 from './hooks/hook1';\r\nimport Callback from './hooks/callback';\r\nimport HooksForm from './hooks/hooks_form1';\r\nimport PrivateComponent from './hooks/privatecomponent';\r\nimport SignUp from './hooks/signup';\r\n\r\n\r\nimport Profile from './Profile/profile';\r\nimport ShowUser from './Profile/showuser';\r\nimport SendMessage from './Profile/sendmessage';\r\nimport ShowMessages from './Profile/showmessages';\r\nimport ReplytoMessage from './Profile/replytomessage';\r\n\r\nimport Posts from './Blog/posts';\r\nimport AddPost from './Blog/addpost';\r\nimport ShowPost from './Blog/showpost';\r\nimport EditPost from './Blog/editpost';\r\n\r\n\r\n\r\nconst PrivateRoute = ({component: Component, auth }) => (\r\n  <Route render={props => auth === true\r\n    ? <Component auth={auth} {...props} />\r\n    : <Redirect to={{pathname:'/signup'}} />\r\n  }\r\n  />\r\n)\r\n\r\n\r\n\r\nconst Routes = () => {\r\n    const context = useContext(Context)\r\n\r\n      return(\r\n        <div>\r\n          <Router history={history} >\r\n          <Header />\r\n          <br />\r\n          <br />\r\n          <div>\r\n            <Switch>\r\n              <Route exact path='/' component={Home} />\r\n              <Route path='/hooksform' component={HooksForm} />\r\n\r\n              <Route path='/hookscontainer' component={HooksContainer1} />\r\n              <Route path='/authcheck' component={AuthCheck} />\r\n              <Route path='/signup' component={SignUp} />\r\n\r\n              <Route path='/posts' component={Posts} />\r\n              <Route path='/post/:pid' component={ShowPost} />\r\n              <Route path='/editpost/:pid' component={EditPost} />\r\n              <Route path='/addpost' component={AddPost} />\r\n\r\n              <Route path=\"/user/:name\" component={ ShowUser } />\r\n\r\n              <PrivateRoute path='/profile'\r\n                            auth={context.authState}\r\n                            component={Profile} />\r\n\r\n              <PrivateRoute path=\"/sendmessage\"\r\n                            auth={context.authState}\r\n                            component={ SendMessage } />\r\n\r\n              <PrivateRoute path=\"/showmessages/:id\"\r\n                            auth={context.authState}\r\n                            component={ ShowMessages } />\r\n              <PrivateRoute path=\"/replytomessage\"\r\n                            auth={context.authState}\r\n                            component={ ReplytoMessage } />\r\n\r\n              <PrivateRoute path='/privateroute'\r\n                            auth={context.authState}\r\n                            component={PrivateComponent} />\r\n              <PrivateRoute path=\"/profile\"\r\n                            auth={context.authState}\r\n                            component={Profile} />\r\n              <Route path='/callback'\r\n                     render={(props) => { context.handleAuth(props);\r\n                                           return <Callback />}} />\r\n\r\n\r\n            </Switch>\r\n          </div>\r\n          </Router>\r\n        </div>\r\n  )}\r\n\r\n\r\n\r\nexport default Routes;\r\n","import React, { useReducer } from 'react';\r\nimport Context from './utils/context';\r\nimport * as ACTIONS from './store/actions/actions';\r\n\r\nimport * as Reducer1 from './store/reducers/plain_reducer';\r\nimport * as AuthReducer from './store/reducers/auth_reducer';\r\nimport * as FormReducer from './store/reducers/form_reducer';\r\nimport * as PostsReducer from './store/reducers/posts_reducer';\r\n\r\n\r\nimport Routes from './routes';\r\n\r\nimport Auth from './utils/auth';\r\n\r\nconst auth = new Auth()\r\n\r\n\r\nconst ContextState = (props) => {\r\n    /*\r\n        Plain Reducer\r\n    */\r\n    const [stateReducer1, dispatchReducer1] = useReducer(Reducer1.Reducer1,\r\n                                                         Reducer1.initialState)\r\n\r\n\r\n    const handleDispatchTrue = () => {\r\n      //    dispatchReducer1(type: \"SUCCESS\")\r\n      //    dispatchReducer1(ACTIONS.SUCCESS)\r\n      dispatchReducer1(ACTIONS.success())\r\n    }\r\n\r\n    const handleDispatchFalse = () => {\r\n      //     dispatchReducer1(type: \"FAILURE\")\r\n      //    dispatchReducer1(ACTIONS.FAILURE)\r\n      dispatchReducer1(ACTIONS.failure())\r\n     }\r\n\r\n    /*\r\n      Auth Reducer\r\n    */\r\n    const [stateAuthReducer, dispatchAuthReducer] = useReducer(AuthReducer.AuthReducer,\r\n                                                               AuthReducer.initialState)\r\n\r\n\r\n    const handleLogin = () => {\r\n      dispatchAuthReducer(ACTIONS.login_success())\r\n    }\r\n\r\n    const handleLogout = () => {\r\n      dispatchAuthReducer(ACTIONS.login_failure())\r\n    }\r\n\r\n\r\n    const handleDBProfile = (profile) => {\r\n      dispatchAuthReducer(ACTIONS.set_db_profile(profile))\r\n    }\r\n\r\n    const handleRemoveDBProfile = () => {\r\n      dispatchAuthReducer(ACTIONS.remove_db_profile())\r\n    }\r\n\r\n    const handleAddProfile = (profile) => {\r\n      dispatchAuthReducer(ACTIONS.add_profile(profile))\r\n    }\r\n\r\n    const handleRemoveProfile = () => {\r\n      dispatchAuthReducer(ACTIONS.remove_profile())\r\n    }\r\n\r\n\r\n\r\n    /*\r\n      Form Reducer\r\n    */\r\n\r\n    const [stateFormReducer, dispatchFormReducer] = useReducer(FormReducer.FormReducer,\r\n                                                               FormReducer.initialState)\r\n\r\n    const handleFormChange = (event) => {\r\n      dispatchFormReducer(ACTIONS.user_input_change(event.target.value))\r\n    };\r\n\r\n    const handleFormSubmit = (event) => {\r\n      event.preventDefault();\r\n      event.persist();\r\n      dispatchFormReducer(ACTIONS.user_input_submit(event.target.useContext.value))\r\n    };\r\n\r\n\r\n    /*\r\n      Posts Reducer\r\n    */\r\n\r\n    const [statePostsReducer, dispatchPostsReducer] = useReducer(PostsReducer.PostsReducer,\r\n                                                         PostsReducer.initialState)\r\n\r\n\r\n    const handleSetPosts = (posts) => {\r\n      dispatchPostsReducer(ACTIONS.set_db_posts(posts) )\r\n    }\r\n\r\n    const handleRemovePosts = () => {\r\n      dispatchPostsReducer(ACTIONS.remove_db_posts() )\r\n    }\r\n\r\n\r\n    //Handle authentication from callback\r\n    const handleAuthentication = (props) => {\r\n      if(props.location.hash) {\r\n        auth.handleAuth()\r\n      }\r\n    }\r\n\r\n\r\n    return(\r\n      <div>\r\n      <Context.Provider\r\n          value={{\r\n            stateProp1: stateReducer1.stateprop1,\r\n            dispatchContextTrue: () => handleDispatchTrue(),\r\n            dispatchContextFalse: () => handleDispatchFalse(),\r\n\r\n            //Auth Reducer\r\n            //keep for global state\r\n            authState: stateAuthReducer.is_authenticated,\r\n            dbProfileState: stateAuthReducer.db_profile,\r\n            profileState:  stateAuthReducer.profile,\r\n\r\n            handleAddDBProfile: (profile) => handleDBProfile(profile),\r\n            handleRemoveDBProfile: () => handleRemoveDBProfile(),\r\n            handleUserAddProfile: (profile) => handleAddProfile(profile),\r\n            handleUserRemoveProfile: () => handleRemoveProfile(),\r\n            handleUserLogin: () => handleLogin(),\r\n            handleUserLogout: () => handleLogout(),\r\n\r\n            //Form Reducer\r\n            useContextChangeState: stateFormReducer.user_textChange,\r\n            useContextSubmitState: stateFormReducer.user_textSubmit,\r\n            useContextSubmit: (event) => handleFormSubmit(event),\r\n            useContextChange: (event) => handleFormChange(event),\r\n\r\n            //Posts State\r\n            postsState: statePostsReducer.posts,\r\n            handleAddPosts: (posts) => handleSetPosts(posts),\r\n            handleRemovePosts: () => handleRemovePosts(),\r\n\r\n            //Handle auth\r\n            //keep for global state\r\n            handleAuth: (props) => handleAuthentication(props),\r\n            authObj: auth\r\n          }}>\r\n          <Routes />\r\n      </Context.Provider>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ContextState;\r\n","import auth0 from 'auth0-js'\r\nimport history from './history';\r\n\r\nexport default class Auth {\r\n  auth0 = new auth0.WebAuth({\r\n    domain: 'webapp1.auth0.com',\r\n    clientID: 'uZxUdMAsiDWeu3OrNpoi4JwJscdF5nAx',\r\n    redirectUri: 'http://localhost:3000/callback',\r\n    responseType: 'token id_token',\r\n    scope: 'openid profile email'\r\n  })\r\n\r\n  userProfile = {}\r\n\r\n  login = () => {\r\n      this.auth0.authorize()\r\n  }\r\n\r\n  handleAuth = () => {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if(authResult) {\r\n        localStorage.setItem('access_token', authResult.accessToken)\r\n        localStorage.setItem('id_token', authResult.idToken)\r\n\r\n        let expiresAt = JSON.stringify((authResult.expiresIn * 1000 + new Date().getTime()))\r\n        localStorage.setItem('expiresAt', expiresAt)\r\n\r\n        this.getProfile();\r\n        setTimeout(() => { history.replace('/authcheck') }, 600);\r\n      } else {\r\n        console.log(err)\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccessToken = () => {\r\n    if(localStorage.getItem('access_token')) {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      return accessToken\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n\r\n  getProfile = () => {\r\n    let accessToken = this.getAccessToken()\r\n    if(accessToken) {\r\n      this.auth0.client.userInfo(accessToken, (err, profile) => {\r\n          if(profile) {\r\n            this.userProfile = { profile }\r\n          }\r\n      } )\r\n    }\r\n  }\r\n\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('access_token')\r\n    localStorage.removeItem('id_token')\r\n    localStorage.removeItem('expiresAt')\r\n    setTimeout(() => { history.replace('/authcheck') }, 200);\r\n  }\r\n\r\n  isAuthenticated = () => {\r\n    let expiresAt = JSON.parse(localStorage.getItem('expiresAt'))\r\n    return new Date().getTime() < expiresAt\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ContextState from './context_state_config';\n\n\n\nconst App = () => {\n\n    return(\n      <div>\n      React\n      <ContextState />\n      </div>\n    )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}