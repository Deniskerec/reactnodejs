{"ast":null,"code":"import _slicedToArray from \"/home/denis/Documents/reactnodejs/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/denis/Documents/reactnodejs/Client/src/hooks/hook1.js\";\nimport React, { useContext, useState, useEffect, useReducer } from 'react';\nimport * as ACTIONS from '../store/actions/actions';\nimport * as Reducer1 from '../store/reducers/plain_reducer';\nimport Context from '../utils/context';\n\nconst HooksContainer1 = () => {\n  const context = useContext(Context);\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        useEffectValue = _useState4[0],\n        setUseEffectValue = _useState4[1];\n\n  const _useReducer = useReducer(Reducer1.Reducer1, Reducer1.initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  useEffect(() => {\n    setTimeout(() => setUseEffectValue(\"useEffect worked\"), 3000);\n  }, [value]);\n\n  const incrementValue = () => {\n    setValue(value + 1);\n  };\n\n  const decrementValue = () => {\n    setValue(value - 1);\n  };\n\n  const handleuseEffectValue = () => {\n    setUseEffectValue(\"some string\");\n  };\n\n  const handleDispatchTrue = () => {\n    //    dispatch(type: \"SUCCESS\")\n    //    dispatch(ACTIONS.SUCCESS)\n    dispatch(ACTIONS.success());\n  };\n\n  const handleDispatchFalse = () => {\n    //     dispatch(type: \"FAILURE\")\n    //    dispatch(ACTIONS.FAILURE)\n    dispatch(ACTIONS.failure());\n  };\n\n  const handleContextDispatchTrue = () => {\n    context.dispatchContextTrue();\n  };\n\n  const handleContextDispatchFalse = () => {\n    context.dispatchContextFalse();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleuseEffectValue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Handle Value  \"), React.createElement(\"button\", {\n    onClick: () => handleDispatchTrue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Dispatch True \"), React.createElement(\"button\", {\n    onClick: () => handleDispatchFalse(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Dispatch False \"), React.createElement(\"button\", {\n    onClick: () => handleContextDispatchTrue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Dispatch Context True \"), React.createElement(\"button\", {\n    onClick: () => handleContextDispatchFalse(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Dispatch Context False \"), React.createElement(\"button\", {\n    onClick: () => incrementValue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" Add Local Value \"), React.createElement(\"button\", {\n    onClick: () => decrementValue(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" Dec Local Value \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), context.useContextSubmitState ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \" \", context.useContextSubmitState, \" \") : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" No User Text \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), state.stateprop1 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \" Local stateprop1 is true \") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" Local stateprop1 is false \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), context.stateProp1 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \" Global Context stateprop1 is true \") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" Global Context stateprop1 is false \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), useEffectValue ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \" \", useEffectValue) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" No value \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Local Value: \", value), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n};\n\nexport default HooksContainer1;","map":{"version":3,"sources":["/home/denis/Documents/reactnodejs/Client/src/hooks/hook1.js"],"names":["React","useContext","useState","useEffect","useReducer","ACTIONS","Reducer1","Context","HooksContainer1","context","value","setValue","useEffectValue","setUseEffectValue","initialState","state","dispatch","setTimeout","incrementValue","decrementValue","handleuseEffectValue","handleDispatchTrue","success","handleDispatchFalse","failure","handleContextDispatchTrue","dispatchContextTrue","handleContextDispatchFalse","dispatchContextFalse","useContextSubmitState","stateprop1","stateProp1"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useReducer } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport * as Reducer1 from '../store/reducers/plain_reducer';\r\nimport Context from '../utils/context';\r\n\r\n\r\nconst HooksContainer1 = () => {\r\n  const context = useContext(Context)\r\n\r\n  const [value, setValue] = useState(0)\r\n\r\n  const [useEffectValue, setUseEffectValue] = useState(null)\r\n\r\n  const [state, dispatch] = useReducer(Reducer1.Reducer1, Reducer1.initialState)\r\n\r\n  useEffect(() => {\r\n      setTimeout(() => setUseEffectValue(\"useEffect worked\"), 3000 );\r\n  }, [value])\r\n\r\n  const incrementValue = () => {\r\n    setValue(value + 1 )\r\n  }\r\n\r\n  const decrementValue = () => {\r\n    setValue(value - 1 )\r\n  }\r\n\r\n  const handleuseEffectValue = () => {\r\n    setUseEffectValue(\"some string\")\r\n  }\r\n\r\n  const handleDispatchTrue = () => {\r\n    //    dispatch(type: \"SUCCESS\")\r\n    //    dispatch(ACTIONS.SUCCESS)\r\n    dispatch(ACTIONS.success())\r\n  }\r\n\r\n  const handleDispatchFalse = () => {\r\n    //     dispatch(type: \"FAILURE\")\r\n    //    dispatch(ACTIONS.FAILURE)\r\n    dispatch(ACTIONS.failure())\r\n  }\r\n\r\n  const handleContextDispatchTrue = () => {\r\n    context.dispatchContextTrue()\r\n  }\r\n\r\n  const handleContextDispatchFalse = () => {\r\n    context.dispatchContextFalse()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n      <button onClick={() => handleuseEffectValue()}> Handle Value  </button>\r\n      <button onClick={() => handleDispatchTrue()}>Dispatch True </button>\r\n      <button onClick={() => handleDispatchFalse()}>Dispatch False </button>\r\n      <button onClick={() => handleContextDispatchTrue()}>Dispatch Context True </button>\r\n      <button onClick={() => handleContextDispatchFalse()}>Dispatch Context False </button>\r\n      <button onClick={() => incrementValue()}> Add Local Value </button>\r\n      <button onClick={() => decrementValue()}> Dec Local Value </button>\r\n      <br />\r\n      <br />\r\n      {context.useContextSubmitState\r\n        ? <h3> {context.useContextSubmitState} </h3>\r\n        : <h3> No User Text </h3>\r\n      }\r\n      <br />\r\n      {state.stateprop1\r\n        ? <p> Local stateprop1 is true </p>\r\n        : <p> Local stateprop1 is false </p>\r\n      }\r\n      <br />\r\n      {context.stateProp1\r\n        ? <p> Global Context stateprop1 is true </p>\r\n        : <p> Global Context stateprop1 is false </p>\r\n      }\r\n      <br />\r\n      {useEffectValue\r\n        ? <p> { useEffectValue }</p>\r\n        : <p> No value </p>\r\n      }\r\n      <br />\r\n      <p>Local Value: {value}</p>\r\n      <br />\r\n      <br />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default HooksContainer1;\r\n"]},"metadata":{},"sourceType":"module"}